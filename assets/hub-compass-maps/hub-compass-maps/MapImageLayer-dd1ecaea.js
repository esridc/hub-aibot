import { iU as a, jE as a$1, iV as t, gp as l, gq as c, gr as j, gs as O, iW as p, j6 as i, jB as o, $ as a$2, dc as b, aF as f$1, kf as n, f0 as r, O as j$1, cs as M, ct as c$1, j7 as t$2, k0 as e$1, f as s, W as d, a1 as e$2, a2 as y, cg as c$2, eR as o$1, eS as r$1, eE as T, gv as f$2, a3 as a$3 } from './hub-compass-map-4d751555.js';
import { i as i$1 } from './scaleUtils-ae262f8f.js';
import { E, f, Y } from './SublayersOwner-f859e3f5.js';
import { m } from './ExportImageParameters-d76165ae.js';
import { t as t$1 } from './imageBitmapUtils-a18e0bcd.js';
import { e } from './sublayerUtils-f7c5f43a.js';
import './index-d436d5f8.js';
import './QueryTask-946a1d62.js';
import './executeForIds-9df28489.js';
import './query-281c4009.js';
import './pbfQueryUtils-605db89c.js';
import './pbf-62769da7.js';
import './OptimizedGeometry-d99be84d.js';
import './OptimizedFeatureSet-c30cfe93.js';
import './executeQueryJSON-d7c1b267.js';
import './executeQueryPBF-fd92cb5f.js';
import './featureConversionUtils-80dbaef5.js';
import './floorFilterUtils-29b268fd.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let q=class extends(a(a$1(t(E(f(l(c(j(O(p(i(o(a$2(b)))))))))))))){constructor(...e){super(...e),this.dateFieldsTimeReference=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeReference=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null;}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(f$1).then((()=>this._fetchService(r)))),Promise.resolve(this)}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.includes("PNG32")?"png32":"png24"}writeSublayers(e$1,r$1,t,i){if(!this.loaded||!e$1)return;const o=e$1.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let s=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap?.supportsDynamicLayers){const e$1=n(i.origin);if(e$1===r.PORTAL_ITEM){const e$1=this.createSublayersForOrigin("service").sublayers;s=e(o,e$1,r.SERVICE);}else if(e$1>r.PORTAL_ITEM){const e$1=this.createSublayersForOrigin("portal-item");s=e(o,e$1.sublayers,n(e$1.origin));}}const a=[],p={writeSublayerStructure:s,...i};let n$1=s;o.forEach((e=>{const r=e.write({},p);a.push(r),n$1=n$1||"user"===e.originOf("visible");}));a.some((e=>Object.keys(e).length>1))&&(r$1.layers=a),n$1&&(r$1.visibleLayers=o.filter((e=>e.visible)).map((e=>e.id)));}createExportImageParameters(e,r,t,i){const o=i&&i.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const s=new m({layer:this,floors:i?.floors,scale:i$1({extent:e,width:r})*o}),a=s.toJSON();s.destroy();const p=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},n=e&&e.spatialReference,m$1=n.wkid||JSON.stringify(n.toJSON());a.dpi*=o;const l={};if(i?.timeExtent){const{start:e,end:r}=i.timeExtent.toJSON();l.time=e&&r&&e===r?""+e:`${e??"null"},${r??"null"}`;}else this.timeInfo&&!this.timeInfo.hasLiveData&&(l.time="null,null");return {bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:m$1,imageSR:m$1,size:r+","+t,...a,...p,...l}}async fetchImage(e,r,t,i){const{data:o}=await this._fetchImage("image",e,r,t,i);return o}async fetchImageBitmap(e,r,t,i){const{data:o,url:s}=await this._fetchImage("blob",e,r,t,i);return t$1(o,s,i?.signal)}async fetchRecomputedExtents(e={}){const i={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:o}=await j$1(this.url,i),{extent:s,fullExtent:a,timeExtent:p}=o,n=s||a;return {fullExtent:n&&M.fromJSON(n),timeExtent:p&&c$1.fromJSON({start:p[0],end:p[1]})}}loadAll(){return t$2(this,(e=>{e(this.allSublayers);}))}serviceSupportsSpatialReference(e){return e$1(this,e)}async _fetchImage(e,t,o,s$1,a){const p={responseType:e,signal:a?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,o,s$1,a),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},m=this.parsedUrl.path+"/export";if(null!=p.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new s("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:p.query});try{const{data:e}=await j$1(m,p);return {data:e,url:m}}catch(l){if(d(l))throw l;throw new s("mapimagelayer:image-fetch-error",`Unable to load image: ${m}`,{error:l})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:i}=await j$1(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});i&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl});}};e$2([y({type:c$2})],q.prototype,"dateFieldsTimeReference",void 0),e$2([y({type:Boolean})],q.prototype,"datesInUnknownTimezone",void 0),e$2([y()],q.prototype,"dpi",void 0),e$2([y()],q.prototype,"gdbVersion",void 0),e$2([y()],q.prototype,"imageFormat",void 0),e$2([o$1("imageFormat",["supportedImageFormatTypes"])],q.prototype,"readImageFormat",null),e$2([y({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],q.prototype,"imageMaxHeight",void 0),e$2([y({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],q.prototype,"imageMaxWidth",void 0),e$2([y()],q.prototype,"imageTransparency",void 0),e$2([y({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],q.prototype,"isReference",void 0),e$2([y({json:{read:!1,write:!1}})],q.prototype,"labelsVisible",void 0),e$2([y({type:["ArcGISMapServiceLayer"]})],q.prototype,"operationalLayerType",void 0),e$2([y({json:{read:!1,write:!1}})],q.prototype,"popupEnabled",void 0),e$2([y({type:c$2})],q.prototype,"preferredTimeReference",void 0),e$2([y()],q.prototype,"sourceJSON",void 0),e$2([y({json:{write:{ignoreOrigin:!0}}})],q.prototype,"sublayers",void 0),e$2([r$1("sublayers",{layers:{type:[Y]},visibleLayers:{type:[T]}})],q.prototype,"writeSublayers",null),e$2([y({type:["show","hide","hide-children"]})],q.prototype,"listMode",void 0),e$2([y({json:{read:!1},readOnly:!0,value:"map-image"})],q.prototype,"type",void 0),e$2([y(f$2)],q.prototype,"url",void 0),q=e$2([a$3("esri.layers.MapImageLayer")],q);const k=q;

export default k;

//# sourceMappingURL=MapImageLayer-dd1ecaea.js.map