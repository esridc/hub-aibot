{"version":3,"names":["ChatbotLayout","HubAIModel","HubChatAuthor","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","requiresFormData","params","keys","some","key","value","toParam","type","constructor","name","processParams","newParams","forEach","_a","_b","param","firstElementType","JSON","stringify","join","valueOf","Array","isArray","encodeParam","map","arrayElem","encodeURIComponent","encodeQueryString","browserPonyfill","FormData","globalThis","File","Blob","encodeFormData","forceFormData","useFormData","formData","filename","append","ArcGISRequestError","Error","message","code","response","url","options","super","actualProto","setPrototypeOf","this","originalMessage","warn","console","apply","getFetch","Promise","resolve","fetch","Headers","Response","Request","request","NODEJS_DEFAULT_REFERER_HEADER","getDefaultRequestOptions","DEFAULT_ARCGIS_REQUEST_OPTIONS","httpMethod","f","ArcGISAuthError","retry","getSession","retryLimit","tries","retryRequest","reject","then","session","newOptions","assign","authentication","internalRequest","catch","checkForErrors","originalAuthError","error","messageCode","errorCode","status","parse","statusMessage","requestOptions","defaults","headers","rawResponse","fetchOptions","method","signal","credentials","rawToken","portal","getToken","startsWith","suppressWarnings","ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING","originalUrl","err","token","getDomainCredentials","requestHeaders","hideToken","window","queryParams","urlWithQueryString","maxUrlLength","RegExp","test","body","document","referer","ok","json","jsonError","statusText","details","formattedMessage","trim","text","blob","data","truncatedUrl","toLowerCase","split","federatedServers","expires","Date","now","canRefresh","refreshCredentials","appendCustomParams","customOptions","baseOptions","requestOptionsKeys","reduce","cleanUrl","slice","buildUrl","host","path","query","baseUrl","endsWith","URL","search","buildQueryString","toString","filter","undefined","acc","URLSearchParams","getPortalUrl","SearchQueryBuilder","q","termStack","rangeStack","openGroups","match","terms","concat","in","field","fn","hasRange","hasTerms","commit","startGroup","endGroup","and","addModifier","or","not","from","term","to","boost","num","cleanup","clone","modifier","currentModifer","toUpperCase","hasWhiteSpace","formatTerm","getTime","oldQ","replace","genericSearch","searchType","groupId","r","nextStart","nextPage","start","createGroup","group","searchGroups","RemoteServerError","_RemoteServerError","authenticateRequest","tokenPromise","bind","apiRequest","route","opts","mode","cache","apiBase","hubApiUrl","res","searchPosts","property","createPost","getCreateUpdateRequestParams","removePost","postId","mentionUrl","searchChannels","createChannel","createReaction","SortOrder","PostReaction","SharingAccess","PostStatus","DiscussionType","DiscussionSource","PostRelation","ReactionRelation","ChannelFilter","CommonSort","Role","PostSort","PostType","ChannelSort","ChannelRelation","AclCategory","AclSubCategory","hubChatHistoryKeyword","async","deleteResponse","state","context","hubRequestOptions","addResponseFeedback","reaction","EYES","findOrCreateChatHistoryGroup","chatHistoryGroup","searchResponse","debug","results","createGroupResponse","title","access","typeKeywords","success","createChatHistory","channel","groups","id","PRIVATE","chatHistoryChannel","getChatHistory","getChatChannel","posts","channels","items","addChatHistory","post","channelId","discussion","user"],"sources":["./src/types/types.ts","./node_modules/tslib/tslib.es6.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js","./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js","./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.js","./node_modules/@esri/arcgis-rest-request/dist/esm/request.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js","./node_modules/@esri/hub-common/dist/esm/urls/build-url.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/util/SearchQueryBuilder.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/util/generic-search.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/create.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/groups/search.js","./node_modules/@esri/hub-common/dist/esm/request.js","./node_modules/@esri/hub-discussions/dist/esm/utils/request.js","./node_modules/@esri/hub-discussions/dist/esm/request.js","./node_modules/@esri/hub-discussions/dist/esm/posts/posts.js","./node_modules/@esri/hub-discussions/dist/esm/channels/channels.js","./node_modules/@esri/hub-discussions/dist/esm/reactions/reactions.js","./node_modules/@esri/hub-discussions/dist/esm/types.js","./src/util/discussions.ts"],"sourcesContent":["\nexport enum ChatbotLayout {\n    Popup = \"popup\",\n    Modal = \"modal\"\n}\n\nexport enum HubAIModel {\n    Nearby = 'nearby',\n    Text = 'text',\n    Image = 'image'\n}\n\nexport enum HubChatAuthor {\n    user = \"user\",\n    hub = \"hub\",\n    system = \"system\"\n}\nexport type HubChatMessage = {\n    postId?: string,\n    author: string,\n    text: string,\n    action?: string\n}\nexport default HubAIModel;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Checks parameters to see if we should use FormData to send the request\n * @param params The object whose keys will be encoded.\n * @return A boolean indicating if FormData will be required.\n */\nexport function requiresFormData(params) {\n    return Object.keys(params).some((key) => {\n        let value = params[key];\n        if (!value) {\n            return false;\n        }\n        if (value && value.toParam) {\n            value = value.toParam();\n        }\n        const type = value.constructor.name;\n        switch (type) {\n            case \"Array\":\n                return false;\n            case \"Object\":\n                return false;\n            case \"Date\":\n                return false;\n            case \"Function\":\n                return false;\n            case \"Boolean\":\n                return false;\n            case \"String\":\n                return false;\n            case \"Number\":\n                return false;\n            default:\n                return true;\n        }\n    });\n}\n/**\n * Converts parameters to the proper representation to send to the ArcGIS REST API.\n * @param params The object whose keys will be encoded.\n * @return A new object with properly encoded values.\n */\nexport function processParams(params) {\n    const newParams = {};\n    Object.keys(params).forEach((key) => {\n        var _a, _b;\n        let param = params[key];\n        if (param && param.toParam) {\n            param = param.toParam();\n        }\n        if (!param &&\n            param !== 0 &&\n            typeof param !== \"boolean\" &&\n            typeof param !== \"string\") {\n            return;\n        }\n        const type = param.constructor.name;\n        let value;\n        // properly encodes objects, arrays and dates for arcgis.com and other services.\n        // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30\n        // also see https://github.com/Esri/arcgis-rest-js/issues/18:\n        // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string \"\".\n        switch (type) {\n            case \"Array\":\n                // Based on the first element of the array, classify array as an array of arrays, an array of objects\n                // to be stringified, or an array of non-objects to be comma-separated\n                // eslint-disable-next-line no-case-declarations\n                const firstElementType = (_b = (_a = param[0]) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name;\n                value =\n                    firstElementType === \"Array\"\n                        ? param // pass thru array of arrays\n                        : firstElementType === \"Object\"\n                            ? JSON.stringify(param) // stringify array of objects\n                            : param.join(\",\"); // join other types of array elements\n                break;\n            case \"Object\":\n                value = JSON.stringify(param);\n                break;\n            case \"Date\":\n                value = param.valueOf();\n                break;\n            case \"Function\":\n                value = null;\n                break;\n            case \"Boolean\":\n                value = param + \"\";\n                break;\n            default:\n                value = param;\n                break;\n        }\n        if (value ||\n            value === 0 ||\n            typeof value === \"string\" ||\n            Array.isArray(value)) {\n            newParams[key] = value;\n        }\n    });\n    return newParams;\n}\n//# sourceMappingURL=process-params.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams } from \"./process-params.js\";\n/**\n * Encodes keys and parameters for use in a URL's query string.\n *\n * @param key Parameter's key\n * @param value Parameter's value\n * @returns Query string with key and value pairs separated by \"&\"\n */\nexport function encodeParam(key, value) {\n    // For array of arrays, repeat key=value for each element of containing array\n    if (Array.isArray(value) && value[0] && Array.isArray(value[0])) {\n        return value\n            .map((arrayElem) => encodeParam(key, arrayElem))\n            .join(\"&\");\n    }\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n}\n/**\n * Encodes the passed object as a query string.\n *\n * @param params An object to be encoded.\n * @returns An encoded query string.\n */\nexport function encodeQueryString(params) {\n    const newParams = processParams(params);\n    return Object.keys(newParams)\n        .map((key) => {\n        return encodeParam(key, newParams[key]);\n    })\n        .join(\"&\");\n}\n//# sourceMappingURL=encode-query-string.js.map","module.exports = {\n  FormData: globalThis.FormData,\n  File: globalThis.File,\n  Blob: globalThis.Blob\n};\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams, requiresFormData } from \"./process-params.js\";\nimport { encodeQueryString } from \"./encode-query-string.js\";\nimport { FormData } from \"@esri/arcgis-rest-form-data\";\n/**\n * Encodes parameters in a [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object in browsers or in a [FormData](https://github.com/form-data/form-data) in Node.js\n *\n * @param params An object to be encoded.\n * @returns The complete [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object.\n */\nexport function encodeFormData(params, forceFormData) {\n    // see https://github.com/Esri/arcgis-rest-js/issues/499 for more info.\n    const useFormData = requiresFormData(params) || forceFormData;\n    const newParams = processParams(params);\n    if (useFormData) {\n        const formData = new FormData();\n        Object.keys(newParams).forEach((key) => {\n            if (typeof Blob !== \"undefined\" && newParams[key] instanceof Blob) {\n                /* To name the Blob:\n                 1. look to an alternate request parameter called 'fileName'\n                 2. see if 'name' has been tacked onto the Blob manually\n                 3. if all else fails, use the request parameter\n                */\n                const filename = newParams[\"fileName\"] || newParams[key].name || key;\n                formData.append(key, newParams[key], filename);\n            }\n            else {\n                formData.append(key, newParams[key]);\n            }\n        });\n        return formData;\n    }\n    else {\n        return encodeQueryString(params);\n    }\n}\n//# sourceMappingURL=encode-form-data.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * This represents a generic error from an ArcGIS endpoint. There will be details about the error in the {@linkcode ArcGISRequestError.message},  {@linkcode ArcGISRequestError.originalMessage} properties on the error. You\n * can also access the original server response at  {@linkcode ArcGISRequestError.response} which may have additional details.\n *\n * ```js\n * request(someUrl, someOptions).catch(e => {\n *   if(e.name === \"ArcGISRequestError\") {\n *     console.log(\"Something went wrong with the request:\", e);\n *     console.log(\"Full server response\", e.response);\n *   }\n * })\n * ```\n */\nexport class ArcGISRequestError extends Error {\n    /**\n     * Create a new `ArcGISRequestError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options and parameters of the request\n     */\n    constructor(message, code, response, url, options) {\n        // 'Error' breaks prototype chain here\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        message = message || \"UNKNOWN_ERROR\";\n        code = code || \"UNKNOWN_ERROR_CODE\";\n        this.name = \"ArcGISRequestError\";\n        this.message =\n            code === \"UNKNOWN_ERROR_CODE\" ? message : `${code}: ${message}`;\n        this.originalMessage = message;\n        this.code = code;\n        this.response = response;\n        this.url = url;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=ArcGISRequestError.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Method used internally to surface messages to developers.\n */\nexport function warn(message) {\n    if (console && console.warn) {\n        console.warn.apply(console, [message]);\n    }\n}\n//# sourceMappingURL=warn.js.map","module.exports.getFetch = function getFetch() {\n  return Promise.resolve({\n    fetch: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Response: globalThis.Response,\n    Request: globalThis.request\n  });\n};\n","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { encodeFormData } from \"./utils/encode-form-data.js\";\nimport { encodeQueryString } from \"./utils/encode-query-string.js\";\nimport { requiresFormData } from \"./utils/process-params.js\";\nimport { ArcGISRequestError } from \"./utils/ArcGISRequestError.js\";\nimport { warn } from \"./utils/warn.js\";\nimport { getFetch } from \"@esri/arcgis-rest-fetch\";\nexport const NODEJS_DEFAULT_REFERER_HEADER = `@esri/arcgis-rest-js`;\n/**\n * Sets the default options that will be passed in **all requests across all `@esri/arcgis-rest-js` modules**.\n *\n * ```js\n * import { setDefaultRequestOptions } from \"@esri/arcgis-rest-request\";\n *\n * setDefaultRequestOptions({\n *   authentication: ArcGISIdentityManager // all requests will use this session by default\n * })\n * ```\n *\n * You should **never** set a default `authentication` when you are in a server side environment where you may be handling requests for many different authenticated users.\n *\n * @param options The default options to pass with every request. Existing default will be overwritten.\n * @param hideWarnings Silence warnings about setting default `authentication` in shared environments.\n */\nexport function setDefaultRequestOptions(options, hideWarnings) {\n    if (options.authentication && !hideWarnings) {\n        warn(\"You should not set `authentication` as a default in a shared environment such as a web server which will process multiple users requests. You can call `setDefaultRequestOptions` with `true` as a second argument to disable this warning.\");\n    }\n    globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS = options;\n}\nexport function getDefaultRequestOptions() {\n    return (globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS || {\n        httpMethod: \"POST\",\n        params: {\n            f: \"json\"\n        }\n    });\n}\n/**\n * This error is thrown when a request encounters an invalid token error. Requests that use {@linkcode ArcGISIdentityManager} or\n * {@linkcode ApplicationCredentialsManager} in the `authentication` option the authentication manager will automatically try to generate\n * a fresh token using either {@linkcode ArcGISIdentityManager.refreshCredentials} or\n * {@linkcode ApplicationCredentialsManager.refreshCredentials}. If the request with the new token fails you will receive an `ArcGISAuthError`\n * if refreshing the token fails you will receive an instance of {@linkcode ArcGISTokenRequestError}.\n *\n * ```js\n * request(someUrl, {\n *   authentication: identityManager,\n *   // some additional options...\n * }).catch(e => {\n *   if(e.name === \"ArcGISAuthError\") {\n *     console.log(\"Request with a new token failed you might want to have the user authorize again.\")\n *   }\n *\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     console.log(\"There was an error refreshing the token you might want to have the user authorize again.\")\n *   }\n * })\n * ```\n */\nexport class ArcGISAuthError extends ArcGISRequestError {\n    /**\n     * Create a new `ArcGISAuthError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options of the request\n     */\n    constructor(message = \"AUTHENTICATION_ERROR\", code = \"AUTHENTICATION_ERROR_CODE\", response, url, options) {\n        super(message, code, response, url, options);\n        this.name = \"ArcGISAuthError\";\n        this.message =\n            code === \"AUTHENTICATION_ERROR_CODE\" ? message : `${code}: ${message}`;\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n    }\n    retry(getSession, retryLimit = 1) {\n        let tries = 0;\n        const retryRequest = (resolve, reject) => {\n            tries = tries + 1;\n            getSession(this.url, this.options)\n                .then((session) => {\n                const newOptions = Object.assign(Object.assign({}, this.options), { authentication: session });\n                return internalRequest(this.url, newOptions);\n            })\n                .then((response) => {\n                resolve(response);\n            })\n                .catch((e) => {\n                if (e.name === \"ArcGISAuthError\" && tries < retryLimit) {\n                    retryRequest(resolve, reject);\n                }\n                else if (e.name === this.name &&\n                    e.message === this.message &&\n                    tries >= retryLimit) {\n                    reject(this);\n                }\n                else {\n                    reject(e);\n                }\n            });\n        };\n        return new Promise((resolve, reject) => {\n            retryRequest(resolve, reject);\n        });\n    }\n}\n/**\n * Checks for errors in a JSON response from the ArcGIS REST API. If there are no errors, it will return the `data` passed in. If there is an error, it will throw an `ArcGISRequestError` or `ArcGISAuthError`.\n *\n * @param data The response JSON to check for errors.\n * @param url The url of the original request\n * @param params The parameters of the original request\n * @param options The options of the original request\n * @returns The data that was passed in the `data` parameter\n */\nexport function checkForErrors(response, url, params, options, originalAuthError) {\n    // this is an error message from billing.arcgis.com backend\n    if (response.code >= 400) {\n        const { message, code } = response;\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    // error from ArcGIS Online or an ArcGIS Portal or server instance.\n    if (response.error) {\n        const { message, code, messageCode } = response.error;\n        const errorCode = messageCode || code || \"UNKNOWN_ERROR_CODE\";\n        if (code === 498 || code === 499) {\n            if (originalAuthError) {\n                throw originalAuthError;\n            }\n            else {\n                throw new ArcGISAuthError(message, errorCode, response, url, options);\n            }\n        }\n        throw new ArcGISRequestError(message, errorCode, response, url, options);\n    }\n    // error from a status check\n    if (response.status === \"failed\" || response.status === \"failure\") {\n        let message;\n        let code = \"UNKNOWN_ERROR_CODE\";\n        try {\n            message = JSON.parse(response.statusMessage).message;\n            code = JSON.parse(response.statusMessage).code;\n        }\n        catch (e) {\n            message = response.statusMessage || response.message;\n        }\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    return response;\n}\n/**\n * This is the internal implementation of `request` without the automatic retry behavior to prevent\n * infinite loops when a server continues to return invalid token errors.\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n * @internal\n */\nexport function internalRequest(url, requestOptions) {\n    const defaults = getDefaultRequestOptions();\n    const options = Object.assign(Object.assign(Object.assign({ httpMethod: \"POST\" }, defaults), requestOptions), {\n        params: Object.assign(Object.assign({}, defaults.params), requestOptions.params),\n        headers: Object.assign(Object.assign({}, defaults.headers), requestOptions.headers)\n    });\n    const { httpMethod, rawResponse } = options;\n    const params = Object.assign({ f: \"json\" }, options.params);\n    let originalAuthError = null;\n    const fetchOptions = {\n        method: httpMethod,\n        signal: options.signal,\n        /* ensures behavior mimics XMLHttpRequest.\n        needed to support sending IWA cookies */\n        credentials: options.credentials || \"same-origin\"\n    };\n    // the /oauth2/platformSelf route will add X-Esri-Auth-Client-Id header\n    // and that request needs to send cookies cross domain\n    // so we need to set the credentials to \"include\"\n    if (options.headers &&\n        options.headers[\"X-Esri-Auth-Client-Id\"] &&\n        url.indexOf(\"/oauth2/platformSelf\") > -1) {\n        fetchOptions.credentials = \"include\";\n    }\n    let authentication;\n    // Check to see if this is a raw token as a string and create a IAuthenticationManager like object for it.\n    // Otherwise this just assumes that options.authentication is an IAuthenticationManager.\n    if (typeof options.authentication === \"string\") {\n        const rawToken = options.authentication;\n        authentication = {\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            getToken: () => {\n                return Promise.resolve(rawToken);\n            }\n        };\n        /* istanbul ignore else - we don't need to test NOT warning people */\n        if (!options.authentication.startsWith(\"AAPK\") && // doesn't look like an API Key\n            !options.suppressWarnings && // user doesn't want to suppress warnings for this request\n            !globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING // we havn't shown the user this warning yet\n        ) {\n            warn(`Using an oAuth 2.0 access token directly in the token option is discouraged. Consider using ArcGISIdentityManager or Application session. See https://esriurl.com/arcgis-rest-js-direct-token-warning for more information.`);\n            globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING = true;\n        }\n    }\n    else {\n        authentication = options.authentication;\n    }\n    // for errors in GET requests we want the URL passed to the error to be the URL before\n    // query params are applied.\n    const originalUrl = url;\n    return (authentication\n        ? authentication.getToken(url).catch((err) => {\n            /**\n             * append original request url and requestOptions\n             * to the error thrown by getToken()\n             * to assist with retrying\n             */\n            err.url = url;\n            err.options = options;\n            /**\n             * if an attempt is made to talk to an unfederated server\n             * first try the request anonymously. if a 'token required'\n             * error is thrown, throw the UNFEDERATED error then.\n             */\n            originalAuthError = err;\n            return Promise.resolve(\"\");\n        })\n        : Promise.resolve(\"\"))\n        .then((token) => {\n        if (token.length) {\n            params.token = token;\n        }\n        if (authentication && authentication.getDomainCredentials) {\n            fetchOptions.credentials = authentication.getDomainCredentials(url);\n        }\n        // Custom headers to add to request. IRequestOptions.headers with merge over requestHeaders.\n        const requestHeaders = {};\n        if (fetchOptions.method === \"GET\") {\n            // Prevents token from being passed in query params when hideToken option is used.\n            /* istanbul ignore if - window is always defined in a browser. Test case is covered by Jasmine in node test */\n            if (params.token &&\n                options.hideToken &&\n                // Sharing API does not support preflight check required by modern browsers https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request\n                typeof window === \"undefined\") {\n                requestHeaders[\"X-Esri-Authorization\"] = `Bearer ${params.token}`;\n                delete params.token;\n            }\n            // encode the parameters into the query string\n            const queryParams = encodeQueryString(params);\n            // dont append a '?' unless parameters are actually present\n            const urlWithQueryString = queryParams === \"\" ? url : url + \"?\" + encodeQueryString(params);\n            if (\n            // This would exceed the maximum length for URLs specified by the consumer and requires POST\n            (options.maxUrlLength &&\n                urlWithQueryString.length > options.maxUrlLength) ||\n                // Or if the customer requires the token to be hidden and it has not already been hidden in the header (for browsers)\n                (params.token && options.hideToken)) {\n                // the consumer specified a maximum length for URLs\n                // and this would exceed it, so use post instead\n                fetchOptions.method = \"POST\";\n                // If the token was already added as a Auth header, add the token back to body with other params instead of header\n                if (token.length && options.hideToken) {\n                    params.token = token;\n                    // Remove existing header that was added before url query length was checked\n                    delete requestHeaders[\"X-Esri-Authorization\"];\n                }\n            }\n            else {\n                // just use GET\n                url = urlWithQueryString;\n            }\n        }\n        /* updateResources currently requires FormData even when the input parameters dont warrant it.\n    https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm\n        see https://github.com/Esri/arcgis-rest-js/pull/500 for more info. */\n        const forceFormData = new RegExp(\"/items/.+/updateResources\").test(url);\n        if (fetchOptions.method === \"POST\") {\n            fetchOptions.body = encodeFormData(params, forceFormData);\n        }\n        // Mixin headers from request options\n        fetchOptions.headers = Object.assign(Object.assign({}, requestHeaders), options.headers);\n        // This should have the same conditional for Node JS as ArcGISIdentityManager.refreshWithUsernameAndPassword()\n        // to ensure that generated tokens have the same referer when used in Node with a username and password.\n        /* istanbul ignore next - karma reports coverage on browser tests only */\n        if ((typeof window === \"undefined\" ||\n            (window && typeof window.document === \"undefined\")) &&\n            !fetchOptions.headers.referer) {\n            fetchOptions.headers.referer = NODEJS_DEFAULT_REFERER_HEADER;\n        }\n        /* istanbul ignore else blob responses are difficult to make cross platform we will just have to trust the isomorphic fetch will do its job */\n        if (!requiresFormData(params) && !forceFormData) {\n            fetchOptions.headers[\"Content-Type\"] =\n                \"application/x-www-form-urlencoded\";\n        }\n        /**\n         * Check for a global fetch first and use it if available. This allows us to use the default\n         * configuration of fetch-mock in tests.\n         */\n        /* istanbul ignore next coverage is based on browser code and we don't test for the absence of global fetch so we can skip the else here. */\n        return globalThis.fetch\n            ? globalThis.fetch(url, fetchOptions)\n            : getFetch().then(({ fetch }) => {\n                return fetch(url, fetchOptions);\n            });\n    })\n        .then((response) => {\n        // the request got back an error status code (4xx, 5xx)\n        if (!response.ok) {\n            // we need to determine if the server returned a JSON body with more details.\n            // this is the format used by newer services such as the Places and Style service.\n            return response\n                .json()\n                .then((jsonError) => {\n                // The body can be parsed as JSON\n                const { status, statusText } = response;\n                const { message, details } = jsonError.error;\n                const formattedMessage = `${message}. ${details ? details.join(\" \") : \"\"}`.trim();\n                throw new ArcGISRequestError(formattedMessage, `HTTP ${status} ${statusText}`, jsonError, url, options);\n            })\n                .catch((e) => {\n                // if we already were about to format this as an ArcGISRequestError throw that error\n                if (e.name === \"ArcGISRequestError\") {\n                    throw e;\n                }\n                // server responded w/ an actual error (404, 500, etc) but we could not parse it as JSON\n                const { status, statusText } = response;\n                throw new ArcGISRequestError(statusText, `HTTP ${status}`, response, url, options);\n            });\n        }\n        if (rawResponse) {\n            return response;\n        }\n        switch (params.f) {\n            case \"json\":\n                return response.json();\n            case \"geojson\":\n                return response.json();\n            case \"html\":\n                return response.text();\n            case \"text\":\n                return response.text();\n            /* istanbul ignore next blob responses are difficult to make cross platform we will just have to trust that isomorphic fetch will do its job */\n            default:\n                return response.blob();\n        }\n    })\n        .then((data) => {\n        // Check for an error in the JSON body of a successful response.\n        // Most ArcGIS Server services will return a successful status code but include an error in the response body.\n        if ((params.f === \"json\" || params.f === \"geojson\") && !rawResponse) {\n            const response = checkForErrors(data, originalUrl, params, options, originalAuthError);\n            if (originalAuthError) {\n                /* If the request was made to an unfederated service that\n                didn't require authentication, add the base url and a dummy token\n                to the list of trusted servers to avoid another federation check\n                in the event of a repeat request */\n                const truncatedUrl = url\n                    .toLowerCase()\n                    .split(/\\/rest(\\/admin)?\\/services\\//)[0];\n                options.authentication.federatedServers[truncatedUrl] = {\n                    token: [],\n                    // default to 24 hours\n                    expires: new Date(Date.now() + 86400 * 1000)\n                };\n                originalAuthError = null;\n            }\n            return response;\n        }\n        else {\n            return data;\n        }\n    });\n}\n/**\n * Generic method for making HTTP requests to ArcGIS REST API endpoints.\n *\n * ```js\n * import { request } from '@esri/arcgis-rest-request';\n *\n * request('https://www.arcgis.com/sharing/rest')\n *   .then(response) // response.currentVersion === 5.2\n *\n * request('https://www.arcgis.com/sharing/rest', {\n *   httpMethod: \"GET\"\n * })\n *\n * request('https://www.arcgis.com/sharing/rest/search', {\n *   params: { q: 'parks' }\n * })\n *   .then(response) // response.total => 78379\n * ```\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function request(url, requestOptions = { params: { f: \"json\" } }) {\n    return internalRequest(url, requestOptions).catch((e) => {\n        if (e instanceof ArcGISAuthError &&\n            requestOptions.authentication &&\n            typeof requestOptions.authentication !== \"string\" &&\n            requestOptions.authentication.canRefresh &&\n            requestOptions.authentication.refreshCredentials) {\n            return e.retry(() => {\n                return requestOptions.authentication.refreshCredentials();\n            }, 1);\n        }\n        else {\n            return Promise.reject(e);\n        }\n    });\n}\n//# sourceMappingURL=request.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nexport function appendCustomParams(customOptions, keys, baseOptions) {\n    const requestOptionsKeys = [\n        \"params\",\n        \"httpMethod\",\n        \"rawResponse\",\n        \"authentication\",\n        \"portal\",\n        \"fetch\",\n        \"maxUrlLength\",\n        \"headers\"\n    ];\n    const options = Object.assign(Object.assign({ params: {} }, baseOptions), customOptions);\n    // merge all keys in customOptions into options.params\n    options.params = keys.reduce((value, key) => {\n        if (customOptions[key] ||\n            typeof customOptions[key] === \"boolean\" ||\n            (typeof customOptions[key] === \"number\" &&\n                customOptions[key] === 0)) {\n            value[key] = customOptions[key];\n        }\n        return value;\n    }, options.params);\n    // now remove all properties in options that don't exist in IRequestOptions\n    return requestOptionsKeys.reduce((value, key) => {\n        if (options[key]) {\n            value[key] = options[key];\n        }\n        return value;\n    }, {});\n}\n//# sourceMappingURL=append-custom-params.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nexport function cleanUrl(url) {\n    // Guard so we don't try to trim something that's not a string\n    if (typeof url !== \"string\") {\n        return url;\n    }\n    // trim leading and trailing spaces, but not spaces inside the url\n    url = url.trim();\n    // remove the trailing slash to the url if one was included\n    if (url[url.length - 1] === \"/\") {\n        url = url.slice(0, -1);\n    }\n    return url;\n}\n//# sourceMappingURL=clean-url.js.map","/**\n * @private\n */\nexport function buildUrl(params) {\n    const { host, path, query } = params;\n    const baseUrl = host.endsWith(\"/\") ? host : `${host}/`;\n    const url = new URL(path, baseUrl);\n    url.search = buildQueryString(query);\n    return url.toString();\n}\nfunction buildQueryString(params = {}) {\n    const queryParams = Object.keys(params)\n        .filter((key) => {\n        return params[key] !== undefined;\n    })\n        .reduce((acc, key) => {\n        acc[key] = params[key];\n        return acc;\n    }, {});\n    return new URLSearchParams(queryParams).toString();\n}\n//# sourceMappingURL=build-url.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { cleanUrl } from \"@esri/arcgis-rest-request\";\n/**\n * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given\n * precedence over `authentication.portal`. If neither `portal` nor `authentication` is present,\n * `www.arcgis.com/sharing/rest` is returned.\n *\n * @param requestOptions - Request options that may have authentication manager\n * @returns Portal url to be used in API requests\n */\nexport function getPortalUrl(requestOptions = {}) {\n    // use portal in options if specified\n    if (requestOptions.portal) {\n        return cleanUrl(requestOptions.portal);\n    }\n    // if auth was passed, use that portal\n    if (requestOptions.authentication &&\n        typeof requestOptions.authentication !== \"string\") {\n        // the portal url is already scrubbed in the auth package\n        return requestOptions.authentication.portal;\n    }\n    // default to arcgis.com\n    return \"https://www.arcgis.com/sharing/rest\";\n}\n//# sourceMappingURL=get-portal-url.js.map","/* Copyright (c) 2018-2021 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { warn } from \"@esri/arcgis-rest-request\";\n/**\n * `SearchQueryBuilder` can be used to construct the `q` param for {@linkcode searchItems} or {@linkcode searchGroups}.\n *\n * By chaining methods, it helps build complex search queries.\n *\n * ```js\n * const startDate = new Date(\"2020-01-01\");\n * const endDate = new Date(\"2020-09-01\");\n * const query = new SearchQueryBuilder()\n *  .match(\"Patrick\")\n *  .in(\"owner\")\n *  .and()\n *  .from(startDate)\n *  .to(endDate)\n *  .in(\"created\")\n *  .and()\n *  .startGroup()\n *    .match(\"Web Mapping Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Mobile Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Application\")\n *    .in(\"type\")\n *  .endGroup()\n *  .and()\n *  .match(\"Demo App\");\n *\n * searchItems(query).then((res) => {\n *   console.log(res.results);\n * });\n * ```\n *\n * Will search for items matching\n * ```\n * \"owner: Patrick AND created:[1577836800000 TO 1598918400000] AND (type:\"Web Mapping Application\" OR type:\"Mobile Application\" OR type:Application) AND Demo App\"\n * ```\n */\nexport class SearchQueryBuilder {\n    /**\n     * @param q An existing query string to start building from.\n     */\n    constructor(q = \"\") {\n        this.termStack = [];\n        this.rangeStack = [];\n        this.openGroups = 0;\n        this.q = q;\n    }\n    /**\n     * Defines strings to search for.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"My Layer\")\n     * ```\n     *\n     * @param terms strings to search for.\n     */\n    match(...terms) {\n        this.termStack = this.termStack.concat(terms);\n        return this;\n    }\n    /**\n     * Defines fields to search in. You can pass `\"*\"` or call this method without arguments to search a default set of fields\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"My Layer\")\n     *   .in(\"title\")\n     * ```\n     *\n     * @param field The field to search for the previous match in.\n     */\n    in(field) {\n        const fn = `\\`in(${field ? `\"${field}\"` : \"\"})\\``;\n        if (!this.hasRange && !this.hasTerms) {\n            warn(\n            // apparently-p-rettier-ignore causes some\n            `${fn} was called with no call to \\`match(...)\\` or \\`from(...)\\`/\\`to(...)\\`. Your query was not modified.`);\n            return this;\n        }\n        if (field && field !== \"*\") {\n            this.q += `${field}:`;\n        }\n        return this.commit();\n    }\n    /**\n     * Starts a new search group.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .startGroup()\n     *     .match(\"Lakes\")\n     *     .in(\"title\")\n     *   .endGroup()\n     *   .or()\n     *   .startGroup()\n     *     .match(\"Rivers\")\n     *     .in(\"title\")\n     *   .endGroup()\n     * ```\n     */\n    startGroup() {\n        this.commit();\n        if (this.openGroups > 0) {\n            this.q += \" \";\n        }\n        this.openGroups++;\n        this.q += \"(\";\n        return this;\n    }\n    /**\n     * Ends a search group.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .startGroup()\n     *     .match(\"Lakes\")\n     *     .in(\"title\")\n     *   .endGroup()\n     *   .or()\n     *   .startGroup()\n     *     .match(\"Rivers\")\n     *     .in(\"title\")\n     *   .endGroup()\n     * ```\n     */\n    endGroup() {\n        if (this.openGroups <= 0) {\n            warn(`\\`endGroup(...)\\` was called without calling \\`startGroup(...)\\` first. Your query was not modified.`);\n            return this;\n        }\n        this.commit();\n        this.openGroups--;\n        this.q += \")\";\n        return this;\n    }\n    /**\n     * Joins two sets of queries with an `AND` clause.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .and()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     * ```\n     */\n    and() {\n        return this.addModifier(\"and\");\n    }\n    /**\n     * Joins two sets of queries with an `OR` clause.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .or()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     * ```\n     */\n    or() {\n        return this.addModifier(\"or\");\n    }\n    /**\n     * Joins two sets of queries with a `NOT` clause. Another option for filtering results is the [prohibit operator '-'](https://developers.arcgis.com/rest/users-groups-and-items/search-reference.htm#ESRI_SECTION1_5C6C35DB9E4A4F4492C5B937BDA2BF67).\n     *\n     * ```js\n     * // omit results with \"Rivers\" in their title\n     * const query = new SearchQueryBuilder()\n     *   .not()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     *\n     * // equivalent\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Rivers\")\n     *   .in(\"-title\")\n     * ```\n     */\n    not() {\n        return this.addModifier(\"not\");\n    }\n    /**\n     * Begins a new range query.\n     *\n     * ```js\n     *\n     * const NEWYEARS = new Date(\"2020-01-01\")\n     * const TODAY = new Date()\n     *\n     * const query = new SearchQueryBuilder()\n     *   .from(NEWYEARS)\n     *   .to(TODAY)\n     *   .in(\"created\")\n     * ```\n     */\n    from(term) {\n        if (this.hasTerms) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `\\`from(...)\\` is not allowed after \\`match(...)\\` try using \\`.from(...).to(...).in(...)\\`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\"2020-01-01\").  Your query was not modified.`);\n            return this;\n        }\n        this.rangeStack[0] = term;\n        return this;\n    }\n    /**\n     * Ends a range query.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .from(yesterdaysDate)\n     *   .to(todaysDate)\n     *   .in(\"created\")\n     * ```\n     */\n    to(term) {\n        if (this.hasTerms) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `\\`to(...)\\` is not allowed after \\`match(...)\\` try using \\`.from(...).to(...).in(...)\\`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\"2020-01-01\"). Your query was not modified.`);\n            return this;\n        }\n        this.rangeStack[1] = term;\n        return this;\n    }\n    /**\n     * Boosts the previous term to increase its rank in the results.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .or()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     *   .boost(3)\n     * ```\n     */\n    boost(num) {\n        this.commit();\n        this.q += `^${num}`;\n        return this;\n    }\n    /**\n     * Returns the current query string. Called internally when the request is made.\n     */\n    toParam() {\n        this.commit();\n        this.cleanup();\n        return this.q;\n    }\n    /**\n     * Returns a new instance of `SearchQueryBuilder` based on the current instance.\n     */\n    clone() {\n        this.commit();\n        this.cleanup();\n        return new SearchQueryBuilder(this.q + \"\");\n    }\n    addModifier(modifier) {\n        if (this.currentModifer) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `You have called \\`${this.currentModifer}()\\` after \\`${modifier}()\\`. Your current query was not modified.`);\n            return this;\n        }\n        this.commit();\n        if (this.q === \"\" && modifier !== \"not\") {\n            warn(`You have called \\`${modifier}()\\` without calling another method to modify your query first. Try calling \\`match()\\` first.`);\n            return this;\n        }\n        this.currentModifer = modifier;\n        this.q += this.q === \"\" ? \"\" : \" \";\n        this.q += `${modifier.toUpperCase()} `;\n        return this;\n    }\n    hasWhiteSpace(s) {\n        return /\\s/g.test(s);\n    }\n    formatTerm(term) {\n        if (term instanceof Date) {\n            return term.getTime();\n        }\n        if (typeof term === \"string\" && this.hasWhiteSpace(term)) {\n            return `\"${term}\"`;\n        }\n        return term;\n    }\n    commit() {\n        this.currentModifer = undefined;\n        if (this.hasRange) {\n            this.q += `[${this.formatTerm(this.rangeStack[0])} TO ${this.formatTerm(this.rangeStack[1])}]`;\n            this.rangeStack = [undefined, undefined];\n        }\n        if (this.hasTerms) {\n            this.q += this.termStack\n                .map((term) => {\n                return this.formatTerm(term);\n            })\n                .join(\" \");\n            this.termStack = [];\n        }\n        return this;\n    }\n    get hasTerms() {\n        return this.termStack.length > 0;\n    }\n    get hasRange() {\n        return this.rangeStack.length && this.rangeStack[0] && this.rangeStack[1];\n    }\n    cleanup() {\n        // end a group if we have started one\n        if (this.openGroups > 0) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `Automatically closing ${this.openGroups} group(s). You can use \\`endGroup(...)\\` to remove this warning.`);\n            while (this.openGroups > 0) {\n                this.q += \")\";\n                this.openGroups--;\n            }\n        }\n        const oldQ = this.q;\n        this.q = oldQ.replace(/( AND ?| NOT ?| OR ?)*$/, \"\");\n        if (oldQ !== this.q) {\n            warn(`\\`startGroup(...)\\` was called without calling \\`endGroup(...)\\` first. Your query was not modified.`);\n        }\n        // clear empty groups\n        this.q = this.q.replace(/(\\(\\))*/, \"\");\n    }\n}\n//# sourceMappingURL=SearchQueryBuilder.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request, appendCustomParams } from \"@esri/arcgis-rest-request\";\nimport { SearchQueryBuilder } from \"./SearchQueryBuilder.js\";\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nexport function genericSearch(search, searchType) {\n    let options;\n    if (typeof search === \"string\" || search instanceof SearchQueryBuilder) {\n        options = {\n            httpMethod: \"GET\",\n            params: {\n                q: search\n            }\n        };\n    }\n    else {\n        // searchUserAccess has one (known) valid value: \"groupMember\"\n        options = appendCustomParams(search, [\n            \"q\",\n            \"num\",\n            \"start\",\n            \"sortField\",\n            \"sortOrder\",\n            \"searchUserAccess\",\n            \"searchUserName\",\n            \"filter\",\n            \"countFields\",\n            \"countSize\",\n            \"categories\",\n            \"categoryFilters\"\n        ], {\n            httpMethod: \"GET\"\n        });\n    }\n    let path;\n    switch (searchType) {\n        case \"item\":\n            path = \"/search\";\n            break;\n        case \"group\":\n            path = \"/community/groups\";\n            break;\n        case \"groupContent\":\n            // Need to have groupId property to do group contents search,\n            // cso filter out all but ISearchGroupContentOptions\n            if (typeof search !== \"string\" &&\n                !(search instanceof SearchQueryBuilder) &&\n                search.groupId) {\n                path = `/content/groups/${search.groupId}/search`;\n            }\n            else {\n                return Promise.reject(new Error(\"you must pass a `groupId` option to `searchGroupContent`\"));\n            }\n            break;\n        default:\n            // \"users\"\n            path = \"/portals/self/users/search\";\n            break;\n    }\n    const url = getPortalUrl(options) + path;\n    // send the request\n    return request(url, options).then((r) => {\n        if (r.nextStart && r.nextStart !== -1) {\n            r.nextPage = function () {\n                let newOptions;\n                if (typeof search === \"string\" ||\n                    search instanceof SearchQueryBuilder) {\n                    newOptions = {\n                        q: search,\n                        start: r.nextStart\n                    };\n                }\n                else {\n                    newOptions = search;\n                    newOptions.start = r.nextStart;\n                }\n                return genericSearch(newOptions, searchType);\n            };\n        }\n        return r;\n    });\n}\n//# sourceMappingURL=generic-search.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request } from \"@esri/arcgis-rest-request\";\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\n/**\n * Create a new Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/create-group.htm) for more information.\n *\n * ```js\n * import { createGroup } from \"@esri/arcgis-rest-portal\";\n *\n * createGroup({\n *   group: {\n *     title: \"No Homers\",\n *     access: \"public\"\n *   },\n *   authentication\n * })\n *   .then(response)\n * ```\n *\n * Note: The group name must be unique within the user's organization.\n * @param requestOptions  - Options for the request, including a group object\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function createGroup(requestOptions) {\n    const url = `${getPortalUrl(requestOptions)}/community/createGroup`;\n    requestOptions.params = Object.assign(Object.assign({}, requestOptions.params), requestOptions.group);\n    return request(url, requestOptions);\n}\n//# sourceMappingURL=create.js.map","/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { genericSearch } from \"../util/generic-search.js\";\n/**\n * Search a portal for groups. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-search.htm) for more information.\n *\n * ```js\n * import { searchGroups } from \"@esri/arcgis-rest-portal\";\n *\n * searchGroups('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param search - A string or RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchGroups(search) {\n    return genericSearch(search, \"group\");\n}\n/**\n * Search a portal for items in a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-content-search.htm) for more information.\n *\n * ```js\n * import { searchGroupContent } from \"@esri/arcgis-rest-portal\";\n *\n * searchGroupContent('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param options - RequestOptions object amended with search parameters.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchGroupContent(options) {\n    return genericSearch(options, \"groupContent\");\n}\n//# sourceMappingURL=search.js.map","import { getHubApiUrl } from \"./api\";\nimport { buildUrl } from \"./urls/build-url\";\n/**\n * remote server error\n */\nexport class RemoteServerError extends Error {\n    constructor(message, url, status) {\n        super(message);\n        this.status = status;\n        this.url = url;\n    }\n}\n/**\n * ```js\n * import { hubApiRequest } from \"@esri/hub-common\";\n * //\n * hubApiRequest(\n *   \"/datasets\",\n *   requestOptions\n * })\n *   .then(response);\n * ```\n * make a request to the Hub API\n * @param route API route\n * @param requestOptions request options\n */\nexport function hubApiRequest(route, requestOptions) {\n    // merge in default request options\n    const options = Object.assign({ \n        // why do we default to GET w/ our API?\n        httpMethod: \"GET\" }, requestOptions);\n    // use fetch override if any\n    const _fetch = options.fetch || fetch;\n    // merge in default headers\n    const headers = Object.assign({ \"Content-Type\": \"application/json\" }, options.headers);\n    // build query params/body based on requestOptions.params\n    let query;\n    let body;\n    if (options.httpMethod === \"GET\") {\n        // pass params in query string\n        query = options.params;\n    }\n    else {\n        // pass params in request body\n        body = JSON.stringify(options.params);\n    }\n    // build Hub API URL\n    const url = buildUrl({\n        host: getHubApiUrl(options),\n        path: `/api/v3/${route}`.replace(/\\/\\//g, \"/\"),\n        query,\n    });\n    return _fetch(url, {\n        method: options.httpMethod,\n        headers,\n        body,\n    }).then((resp) => {\n        if (resp.ok) {\n            return resp.json();\n        }\n        else {\n            throw new RemoteServerError(resp.statusText, url, resp.status);\n        }\n    });\n}\n//# sourceMappingURL=request.js.map","import { RemoteServerError as _RemoteServerError, buildUrl, } from \"@esri/hub-common\";\nexport class RemoteServerError extends _RemoteServerError {\n    constructor(message, url, status, error) {\n        super(message, url, status);\n        this.error = error;\n    }\n}\n/**\n * returns Promise that resolves token to use in Discussions API requests\n *\n * @export\n * @param {IDiscussionsRequestOptions} options\n * @return {*}  {Promise<string>}\n */\nexport function authenticateRequest(options) {\n    const { token, authentication } = options;\n    let tokenPromise = () => {\n        return Promise.resolve(token);\n    };\n    if (authentication) {\n        tokenPromise = authentication.getToken.bind(authentication, authentication.portal);\n    }\n    return tokenPromise();\n}\n/**\n * parses IHubRequestOptions and makes request against Discussions API\n *\n * @export\n * @template T\n * @param {string} route\n * @param {IDiscussionsRequestOptions} options\n * @param {string} [token]\n * @return {*}  {Promise<T>}\n */\nexport function apiRequest(route, options, token) {\n    const headers = new Headers(options.headers);\n    headers.append(\"Content-Type\", \"application/json\");\n    if (token) {\n        headers.append(\"Authorization\", `Bearer ${token}`);\n    }\n    const opts = {\n        headers,\n        method: options.httpMethod || \"GET\",\n        mode: options.mode,\n        cache: options.cache,\n        credentials: options.credentials,\n    };\n    const apiBase = buildUrl({\n        // TODO: we _want_ to use getHubApiUrl(),\n        // but have to deal w/ the fact that this package overwrites IHubRequestOptions\n        host: options.hubApiUrl || \"https://hub.arcgis.com\",\n        path: \"/api/discussions/v1\",\n    });\n    if (options.data) {\n        if (options.httpMethod === \"GET\") {\n            const queryParams = new URLSearchParams(options.data).toString();\n            route += `?${queryParams}`;\n        }\n        else {\n            opts.body = JSON.stringify(options.data);\n        }\n    }\n    const url = [apiBase.replace(/\\/$/, \"\"), route.replace(/^\\//, \"\")].join(\"/\");\n    return fetch(url, opts).then((res) => {\n        if (res.ok) {\n            return res.json();\n        }\n        else {\n            const { statusText, status } = res;\n            return res.json().then((err) => {\n                throw new RemoteServerError(statusText, url, status, JSON.stringify(err.message));\n            });\n        }\n    });\n}\n//# sourceMappingURL=request.js.map","import { apiRequest, authenticateRequest } from \"./utils/request\";\n/**\n * method that authenticates and makes requests to Discussions API\n *\n * @export\n * @template T\n * @param {string} url\n * @param {IDiscussionsRequestOptions} options\n * @return {*}  {Promise<T>}\n */\n// NOTE: feasibly this could be replaced with @esi/hub-common hubApiRequest,\n// if that method didn't prepend `/api/v3` to the supplied path. Additionally,\n// there is the difference that hubApiRequest sets Authorization header without `Bearer`\n// https://github.com/Esri/hub.js/blob/f35b1a0a868916bd07e1dfd84cb084bc2c876267/packages/common/src/request.ts#L62\nexport function request(url, options) {\n    return authenticateRequest(options).then((token) => {\n        return apiRequest(url, options, token);\n    });\n}\n//# sourceMappingURL=request.js.map","import { __rest } from \"tslib\";\n/* tslint:disable unified-signatures */\nimport { request } from \"../request\";\n/**\n * search posts\n *\n * @export\n * @param {ISearchPostsParams} options\n * @return {*}  {Promise<IPagedResponse<IPost>>}\n */\nexport function searchPosts(options) {\n    var _a;\n    const url = `/posts`;\n    // need to serialize geometry and featureGeometry since this\n    // is a GET request. we should consider requiring this to be\n    // a base64 string to safeguard against large geometries that\n    // will exceed URL character limits\n    const data = [\"geometry\", \"featureGeometry\"].reduce((acc, property) => acc[property]\n        ? Object.assign(Object.assign({}, acc), { [property]: JSON.stringify(acc[property]) }) : acc, Object.assign({}, ((_a = options.data) !== null && _a !== void 0 ? _a : {})));\n    return request(url, Object.assign(Object.assign({}, options), { data, httpMethod: \"GET\" }));\n}\n/**\n * create post\n *\n * @export\n * @param {ICreatePostParams} options\n * @return {*}  {Promise<IPost>}\n */\nexport function createPost(options) {\n    const url = `/posts`;\n    return request(url, Object.assign({ httpMethod: \"POST\" }, getCreateUpdateRequestParams(options)));\n}\n/**\n * create reply to post\n *\n * @export\n * @param {string} parentId\n * @param {ICreateReplyParams} options\n * @return {*}  {Promise<IPost>}\n */\nexport function createReply(options) {\n    const url = `/posts/${options.postId}/reply`;\n    return request(url, Object.assign({ httpMethod: \"POST\" }, getCreateUpdateRequestParams(options)));\n}\n/**\n * fetch post\n *\n * @export\n * @param {IFetchPostParams} params\n * @return {*}  {Promise<IPost>}\n */\nexport function fetchPost(params) {\n    const url = `/posts/${params.postId}`;\n    params.httpMethod = \"GET\";\n    return request(url, params);\n}\n/**\n * remove post\n *\n * @export\n * @param {IRemovePostParams} options\n * @return {*}  {Promise<IRemovePostResponse>}\n */\nexport function removePost(options) {\n    const url = `/posts/${options.postId}`;\n    options.httpMethod = \"DELETE\";\n    return request(url, options);\n}\n/**\n * update post\n * NOTE: this method currently only update post.title and post.body\n *\n * @export\n * @param {IUpdatePostParams} options\n * @return {*}  {Promise<IPost>}\n */\nexport function updatePost(options) {\n    const url = `/posts/${options.postId}`;\n    return request(url, Object.assign({ httpMethod: \"PATCH\" }, getCreateUpdateRequestParams(options)));\n}\n/**\n * update post status\n * NOTE: this method will only update a post's status\n *\n * @export\n * @param {IUpdatePostStatusParams} options\n * @return {*}  {Promise<IPost>}\n */\nexport function updatePostStatus(options) {\n    const url = `/posts/${options.postId}/status`;\n    options.httpMethod = \"PATCH\";\n    return request(url, options);\n}\n/**\n * Builds the necessary request options for post/reply create/update requests\n * @param mentionUrl\n */\nfunction getCreateUpdateRequestParams(params) {\n    const { mentionUrl } = params, requestOptions = __rest(params, [\"mentionUrl\"]);\n    if (mentionUrl) {\n        requestOptions.headers = Object.assign(Object.assign({}, requestOptions.headers), { \"mention-url\": mentionUrl });\n    }\n    return requestOptions;\n}\n//# sourceMappingURL=posts.js.map","import { request } from \"../request\";\n/**\n * search channels\n *\n * @export\n * @param {ISearchChannelsParams} options\n * @return {*}  {Promise<IPagedResponse<IChannel>>}\n */\nexport function searchChannels(options) {\n    options.httpMethod = \"GET\";\n    return request(`/channels`, options);\n}\n/**\n * create channel\n *\n * @export\n * @param {ICreateChannelParams} options\n * @return {*}  {Promise<IChannel>}\n */\nexport function createChannel(options) {\n    options.httpMethod = \"POST\";\n    return request(`/channels`, options);\n}\n/**\n * fetch channel\n *\n * @export\n * @param {IFetchChannelParams} options\n * @return {*}  {Promise<IChannel>}\n */\nexport function fetchChannel(options) {\n    options.httpMethod = \"GET\";\n    return request(`/channels/${options.channelId}`, options);\n}\n/**\n * update channel\n * NOTE: only updates channel settings properties (softDelete, allowedReactions, etc). A Channel's\n * access and groups cannot be updated.\n *\n * @export\n * @param {IUpdateChannelParams} options\n * @return {*}  {Promise<IChannel>}\n */\nexport function updateChannel(options) {\n    options.httpMethod = \"PATCH\";\n    return request(`/channels/${options.channelId}`, options);\n}\n/**\n * remove channel\n *\n * @export\n * @param {IRemoveChannelParams} options\n * @return {*}\n */\nexport function removeChannel(options) {\n    options.httpMethod = \"DELETE\";\n    return request(`/channels/${options.channelId}`, options);\n}\n/**\n * get channel opt out status\n *\n * @export\n * @param {IFetchChannelNotificationOptOutParams} options\n * @return {*}\n */\nexport function fetchChannelNotifcationOptOut(options) {\n    options.httpMethod = \"GET\";\n    return request(`/channels/${options.channelId}/notifications/opt-out`, options);\n}\n/**\n * opt out of channel notifs\n *\n * @export\n * @param {ICreateChannelNotificationOptOutParams} options\n * @return {*}\n */\nexport function createChannelNotificationOptOut(options) {\n    options.httpMethod = \"POST\";\n    return request(`/channels/${options.channelId}/notifications/opt-out`, options);\n}\n/**\n * opt in to channel notifs\n *\n * @export\n * @param {IRemoveChannelNotificationOptOutParams} options\n * @return {*}\n */\nexport function removeChannelNotificationOptOut(options) {\n    options.httpMethod = \"DELETE\";\n    return request(`/channels/${options.channelId}/notifications/opt-out`, options);\n}\n/**\n * remove all posts in a channel\n *\n * @export\n * @param {IRemoveChannelActivityParams} options\n * @return {*}\n */\nexport function removeChannelActivity(options) {\n    options.httpMethod = \"DELETE\";\n    return request(`/channels/${options.channelId}/activity`, options);\n}\n//# sourceMappingURL=channels.js.map","import { request } from \"../request\";\n/**\n * create reaction to post\n *\n * @export\n * @param {ICreateReactionOptions} options\n * @return {*}  {Promise<IReaction>}\n */\nexport function createReaction(options) {\n    options.httpMethod = \"POST\";\n    return request(`/reactions`, options);\n}\n/**\n * remove reaction\n *\n * @export\n * @param {IRemoveReactionOptions} options\n * @return {*}  {Promise<IRemoveReactionResponse>}\n */\nexport function removeReaction(options) {\n    const { reactionId } = options;\n    options.httpMethod = \"DELETE\";\n    return request(`/reactions/${reactionId}`, options);\n}\n//# sourceMappingURL=reactions.js.map","/**\n * sort orders\n *\n * @export\n * @enum {string}\n */\nexport var SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASC\"] = \"ASC\";\n    SortOrder[\"DESC\"] = \"DESC\";\n})(SortOrder || (SortOrder = {}));\n/**\n * reactions to posts\n *\n * @export\n * @enum {string}\n */\nexport var PostReaction;\n(function (PostReaction) {\n    PostReaction[\"CLAPPING_HANDS\"] = \"clapping_hands\";\n    PostReaction[\"CONFUSED\"] = \"confused\";\n    PostReaction[\"DOWN_ARROW\"] = \"down_arrow\";\n    PostReaction[\"EYES\"] = \"eyes\";\n    PostReaction[\"FACE_WITH_TEARS_OF_JOY\"] = \"face_with_tears_of_joy\";\n    PostReaction[\"FIRE\"] = \"fire\";\n    PostReaction[\"GRINNING\"] = \"grinning\";\n    PostReaction[\"HEART\"] = \"heart\";\n    PostReaction[\"LAUGH\"] = \"laugh\";\n    PostReaction[\"ONE_HUNDRED\"] = \"one_hundred\";\n    PostReaction[\"PARTYING\"] = \"partying\";\n    PostReaction[\"PARTY_POPPER\"] = \"party_popper\";\n    PostReaction[\"RAISING_HANDS\"] = \"raising_hands\";\n    PostReaction[\"ROCKET\"] = \"rocket\";\n    PostReaction[\"SAD\"] = \"sad\";\n    PostReaction[\"SLIGHTLY_SMILING\"] = \"slightly_smiling\";\n    PostReaction[\"SURPRISED\"] = \"surprised\";\n    PostReaction[\"THINKING\"] = \"thinking\";\n    PostReaction[\"THUMBS_UP\"] = \"thumbs_up\";\n    PostReaction[\"THUMBS_DOWN\"] = \"thumbs_down\";\n    PostReaction[\"TROPHY\"] = \"trophy\";\n    PostReaction[\"UP_ARROW\"] = \"up_arrow\";\n    PostReaction[\"WAVING_HAND\"] = \"waving_hand\";\n    PostReaction[\"WINKING\"] = \"winking\";\n    PostReaction[\"WORLD_MAP\"] = \"world_map\";\n})(PostReaction || (PostReaction = {}));\n/**\n * platform sharing access values\n *\n * @export\n * @enum {string}\n */\nexport var SharingAccess;\n(function (SharingAccess) {\n    SharingAccess[\"PUBLIC\"] = \"public\";\n    SharingAccess[\"ORG\"] = \"org\";\n    SharingAccess[\"PRIVATE\"] = \"private\";\n})(SharingAccess || (SharingAccess = {}));\n/**\n * possible statuses of a post\n *\n * @export\n * @enum {string}\n */\nexport var PostStatus;\n(function (PostStatus) {\n    PostStatus[\"PENDING\"] = \"pending\";\n    PostStatus[\"APPROVED\"] = \"approved\";\n    PostStatus[\"REJECTED\"] = \"rejected\";\n    PostStatus[\"DELETED\"] = \"deleted\";\n    PostStatus[\"HIDDEN\"] = \"hidden\";\n})(PostStatus || (PostStatus = {}));\n/**\n * possible discussionn content types, i.e. a post can be about an item, dataset, or group\n *\n * @export\n * @enum {string}\n */\nexport var DiscussionType;\n(function (DiscussionType) {\n    DiscussionType[\"GROUP\"] = \"group\";\n    DiscussionType[\"CONTENT\"] = \"content\";\n    DiscussionType[\"BOARD\"] = \"board\";\n})(DiscussionType || (DiscussionType = {}));\n/**\n * source of a post, i.e. app context\n *\n * @export\n * @enum {string}\n */\nexport var DiscussionSource;\n(function (DiscussionSource) {\n    DiscussionSource[\"HUB\"] = \"hub\";\n    DiscussionSource[\"AGO\"] = \"ago\";\n    DiscussionSource[\"URBAN\"] = \"urban\";\n})(DiscussionSource || (DiscussionSource = {}));\n/**\n * relations of post entity\n *\n * @export\n * @enum {string}\n */\nexport var PostRelation;\n(function (PostRelation) {\n    PostRelation[\"REPLIES\"] = \"replies\";\n    PostRelation[\"REACTIONS\"] = \"reactions\";\n    PostRelation[\"PARENT\"] = \"parent\";\n    PostRelation[\"CHANNEL\"] = \"channel\";\n})(PostRelation || (PostRelation = {}));\n/**\n * relations of reaction entity\n *\n * @export\n * @enum {string}\n */\nexport var ReactionRelation;\n(function (ReactionRelation) {\n    ReactionRelation[\"POST\"] = \"post\";\n})(ReactionRelation || (ReactionRelation = {}));\n/**\n * filters of channel entity\n *\n * @export\n * @enum {string}\n */\nexport var ChannelFilter;\n(function (ChannelFilter) {\n    ChannelFilter[\"HAS_USER_POSTS\"] = \"has_user_posts\";\n})(ChannelFilter || (ChannelFilter = {}));\n// sorting\n/**\n * Common sorting fields\n */\nexport var CommonSort;\n(function (CommonSort) {\n    CommonSort[\"CREATED_AT\"] = \"createdAt\";\n    CommonSort[\"CREATOR\"] = \"creator\";\n    CommonSort[\"EDITOR\"] = \"editor\";\n    CommonSort[\"ID\"] = \"id\";\n    CommonSort[\"UPDATED_AT\"] = \"updatedAt\";\n})(CommonSort || (CommonSort = {}));\n/**\n * Role types\n *\n * @export\n * @enum {string}\n */\nexport var Role;\n(function (Role) {\n    Role[\"READ\"] = \"read\";\n    Role[\"WRITE\"] = \"write\";\n    Role[\"READWRITE\"] = \"readWrite\";\n    Role[\"MODERATE\"] = \"moderate\";\n    Role[\"MANAGE\"] = \"manage\";\n    Role[\"OWNER\"] = \"owner\";\n})(Role || (Role = {}));\n/**\n * Post sorting fields\n *\n * @enum {string}\n */\nexport var PostSort;\n(function (PostSort) {\n    PostSort[\"BODY\"] = \"body\";\n    PostSort[\"CHANNEL_ID\"] = \"channelId\";\n    PostSort[\"CREATED_AT\"] = \"createdAt\";\n    PostSort[\"CREATOR\"] = \"creator\";\n    PostSort[\"DISCUSSION\"] = \"discussion\";\n    PostSort[\"EDITOR\"] = \"editor\";\n    PostSort[\"ID\"] = \"id\";\n    PostSort[\"PARENT_ID\"] = \"parentId\";\n    PostSort[\"STATUS\"] = \"status\";\n    PostSort[\"TITLE\"] = \"title\";\n    PostSort[\"UPDATED_AT\"] = \"updatedAt\";\n})(PostSort || (PostSort = {}));\n/**\n * Post types\n *\n * @enum{string}\n */\nexport var PostType;\n(function (PostType) {\n    PostType[\"Text\"] = \"text\";\n    PostType[\"Announcement\"] = \"announcement\";\n    PostType[\"Poll\"] = \"poll\";\n    PostType[\"Question\"] = \"question\";\n})(PostType || (PostType = {}));\n/**\n * Channel sorting fields\n *\n * @export\n * @enum {string}\n */\nexport var ChannelSort;\n(function (ChannelSort) {\n    ChannelSort[\"ACCESS\"] = \"access\";\n    ChannelSort[\"CREATED_AT\"] = \"createdAt\";\n    ChannelSort[\"CREATOR\"] = \"creator\";\n    ChannelSort[\"EDITOR\"] = \"editor\";\n    ChannelSort[\"ID\"] = \"id\";\n    ChannelSort[\"LAST_ACTIVITY\"] = \"last_activity\";\n    ChannelSort[\"UPDATED_AT\"] = \"updatedAt\";\n})(ChannelSort || (ChannelSort = {}));\n/**\n * relations of channel entity\n *\n * @export\n * @enum {string}\n */\nexport var ChannelRelation;\n(function (ChannelRelation) {\n    ChannelRelation[\"CHANNEL_ACL\"] = \"channelAcl\";\n})(ChannelRelation || (ChannelRelation = {}));\nexport var AclCategory;\n(function (AclCategory) {\n    AclCategory[\"GROUP\"] = \"group\";\n    AclCategory[\"ORG\"] = \"org\";\n    AclCategory[\"USER\"] = \"user\";\n    AclCategory[\"ANONYMOUS_USER\"] = \"anonymousUser\";\n    AclCategory[\"AUTHENTICATED_USER\"] = \"authenticatedUser\";\n})(AclCategory || (AclCategory = {}));\nexport var AclSubCategory;\n(function (AclSubCategory) {\n    AclSubCategory[\"ADMIN\"] = \"admin\";\n    AclSubCategory[\"MEMBER\"] = \"member\";\n})(AclSubCategory || (AclSubCategory = {}));\n//# sourceMappingURL=types.js.map","import { IChannel, IPost, PostReaction, SharingAccess, createChannel, createPost, createReaction, removePost, searchChannels, searchPosts } from '@esri/hub-discussions';\nimport { createGroup, IGroup, SearchQueryBuilder, searchGroups } from \"@esri/arcgis-rest-portal\";\n\nimport state from './state';\n\nconst hubChatHistoryKeyword = \"hubChatHistory\";\n\nexport async function deleteResponse(postId: string) {\n  return removePost({\n    postId,\n    ...state.context.hubRequestOptions\n  })\n}\n\n\nexport async function addResponseFeedback(postId: string = null, reaction: PostReaction = PostReaction.EYES) {\n  if(!postId) {\n    return null\n  };\n  \n  return createReaction({\n    data: {\n      postId,\n      value: reaction,\n    },\n    ...state.context.hubRequestOptions\n  })\n}\n\nexport async function findOrCreateChatHistoryGroup() {\n  let chatHistoryGroup:IGroup = null;\n\n  // Get the Chat history group, or create one if it doesn't exist yet.\n  const query = new SearchQueryBuilder()\n                .match(hubChatHistoryKeyword)\n                .in(\"typekeywords\");\n  const searchResponse = await searchGroups({\n      q: query,\n      ...state.context.hubRequestOptions\n    },\n  );\n  console.debug(\"Find chat history group\", searchResponse)\n\n  // TODO: catch for potential duplicate 'chat history' groups\n  if(searchResponse.results.length > 0) {\n    chatHistoryGroup = searchResponse.results[0];\n  } else {\n    const createGroupResponse = await createGroup({\n      group: {\n        title: \"Chat History\",\n        access: \"private\",\n        typeKeywords: [hubChatHistoryKeyword]\n      },\n      ...state.context.hubRequestOptions\n    })\n    console.debug(\"Chat History createGroupResponse\", createGroupResponse);\n\n    if(createGroupResponse.success) {\n      chatHistoryGroup = createGroupResponse.group;\n    }\n    \n  }\n  return chatHistoryGroup;  \n}\n\nexport async function createChatHistory(chatHistoryGroup: IGroup) {\n  \n  if(!!chatHistoryGroup) {\n    const channel = await createChannel({ \n      data: {\n        name: \"Chat History\",\n        // num: 1,\n        groups: [chatHistoryGroup.id],\n        access: SharingAccess.PRIVATE,\n      },\n      ...state.context.hubRequestOptions    \n    })\n  \n    return channel;\n  }\n  \n}\n\n// TODO move this to state?\nlet chatHistoryChannel:IChannel = null;\n\nexport async function getChatHistory(): Promise<IPost[]> {\n  chatHistoryChannel = await getChatChannel();\n  const posts = await searchPosts({\n    data: {\n      num: 100,\n      channels: [chatHistoryChannel.id],\n      // access: [SharingAccess.PRIVATE],\n    },\n    ...state.context.hubRequestOptions    \n  })\n\n\n  return posts.items;\n}\nexport async function addChatHistory(text: string ) {\n\n const post = await createPost({\n  data: {\n\n    channelId: chatHistoryChannel.id,\n    body: text,\n    discussion: 'hub://compass/general'\n  },\n  ...state.context.hubRequestOptions    \n})\n\nreturn post;\n\n}\n\nexport async function getChatChannel() {\n\n  const chatHistoryGroup = await findOrCreateChatHistoryGroup();\n  let chatHistoryChannel:IChannel = null;\n\n  console.debug(\"user\", state.user);\n  const channels = await searchChannels({\n    data: {\n      // num: 1,\n      groups: [chatHistoryGroup.id],\n      // access: [SharingAccess.PRIVATE],\n    },\n    ...state.context.hubRequestOptions\n  })\n\n  console.debug(\"searchChannels\", channels);\n\n  if(channels.items.length > 0) {\n    chatHistoryChannel = channels.items[0];\n  } else {\n    chatHistoryChannel = await createChatHistory(chatHistoryGroup);\n  }\n  console.debug(\"chatHistoryChannel\", chatHistoryChannel);\n\n  return chatHistoryChannel;\n}"],"mappings":"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"}