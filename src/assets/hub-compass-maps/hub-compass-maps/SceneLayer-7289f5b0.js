import { cV as l$1, a1 as e, a2 as y, a3 as a, jx as u, cL as V, bN as j, fq as Cn, j2 as s$1, kc as Gn, G as t, dM as a$1, et as U, c3 as i, O as j$1, aQ as a$2, eR as o, i_ as s$2, l2 as c$1, gp as l$2, gq as c$2, gr as j$2, iV as t$1, gs as O, j6 as i$1, cU as i$2, dc as b, bX as r, jF as c$3, l3 as n, s as s$4, aF as f, d9 as t$3, cD as b$1, f7 as b$2, f as s$5, cB as h$1, i$ as p$2, cv as V$1, jW as e$1, f0 as r$1, cu as w, W as d$1, ex as j$3, l4 as t$4, l5 as p$3, ky as p$4, ja as d$2, jH as m$1, jI as C, jJ as i$4, j9 as c$4, l6 as r$2, j0 as n$2, j1 as p$5, fl as k, jM as l$4 } from './hub-compass-map-4d751555.js';
import { N, K } from './SceneService-9e601582.js';
import { t as t$2, l as le$1, i as i$3 } from './FetchAssociatedFeatureLayer-25ee2522.js';
import { s as s$3, l as l$3, u as u$1, m } from './I3SLayerDefinitions-0abfeb01.js';
import { g as g$1 } from './persistable-c575d254.js';
import { n as n$1, p as p$1 } from './popupUtils-2fcc03b7.js';
import './index-d436d5f8.js';
import './originUtils-ad3e2fe4.js';
import './multiOriginJSONSupportUtils-c04f5031.js';
import './resourceUtils-f3e31af7.js';
import './mat3f64-9c2c37f3.js';
import './mat4f64-f2ca62fb.js';
import './quat-d7858404.js';
import './quatf64-581a0ed6.js';
import './I3SBinaryReader-6ab534cf.js';
import './VertexAttribute-0bdc9233.js';
import './spatialReferenceEllipsoidUtils-8f8393a7.js';
import './Attribute-00ca6689.js';
import './vec3f32-77e8c64f.js';
import './plane-111c6c2d.js';
import './sphere-53897e84.js';
import './ByteSizeUnit-f75ee973.js';
import './resourceExtension-077825f2.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let s=class extends l$1{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo";}};e([y({type:String,json:{read:!0,write:!0}})],s.prototype,"name",void 0),e([y({type:String,json:{read:!0,write:!0}})],s.prototype,"field",void 0),e([y({type:[Number],json:{read:!0,write:!0}})],s.prototype,"currentRangeExtent",void 0),e([y({type:[Number],json:{read:!0,write:!0}})],s.prototype,"fullRangeExtent",void 0),e([y({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],s.prototype,"type",void 0),s=e([a("esri.layers.support.RangeInfo")],s);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var c;let p=c=class extends(u(V.ofType(j))){constructor(e){super(e);}clone(){return new c(this.items.map((e=>e.clone())))}write(e,r){return this.toJSON(r)}toJSON(e){const r=e?.layer?.spatialReference;return r?this.toArray().map((t=>{if(!r.equals(t.spatialReference)){if(!Cn(t.spatialReference,r))return e&&e.messages&&e.messages.push(new s$1("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const s=new j;Gn(t,s,r),t=s;}const s=t.toJSON(e);return delete s.spatialReference,s})).filter((e=>null!=e)):(e?.messages&&e.messages.push(new s$1("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map((r=>r.toJSON(e))))}static fromJSON(e,r){const t=new c;return e.forEach((e=>t.add(j.fromJSON(e,r)))),t}};p=c=e([a("esri.layers.support.PolygonCollection")],p);const l=p;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var h;let g=h=class extends l$1{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new l,this._geometriesSource=null,this._handles=new t;}initialize(){this._handles.add(a$1((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),U));}destroy(){this._handles.destroy();}readGeometries(e,r,o){Array.isArray(e)?this.geometries=l.fromJSON(e,o):this._geometriesSource={url:i(e,o),context:o};}async loadGeometries(e,o){if(null==this._geometriesSource)return;const{url:s,context:t}=this._geometriesSource,i=await j$1(s,{responseType:"json",signal:o?.signal}),a=e.toJSON(),p=i.data.map((e=>({...e,spatialReference:a})));this.geometries=l.fromJSON(p,t),this._geometriesSource=null;}clone(){const e=new h({geometries:a$2(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};e([y({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],g.prototype,"spatialRelationship",void 0),e([y({type:l,nonNullable:!0,json:{write:!0}}),g$1({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],g.prototype,"geometries",void 0),e([o(["web-scene","portal-item"],"geometries")],g.prototype,"readGeometries",null),g=h=e([a("esri.layers.support.SceneFilter")],g);const d=g;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const oe=["3DObject","Point"],ae=s$2();let ne=class extends(c$1(N(l$2(c$2(j$2(t$1(O(i$1(i$2(b)))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new V,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0;}normalizeCtorArgs(e,t){return "string"==typeof e?{url:e,...t}:e}destroy(){this._set("renderer",null);}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getFeatureType(t?.feature)?.domains?.[e];return r&&"inherited"!==r.type?r:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new r(this.fields)}readNodePages(e,t,r){return "Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:s$3.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo();}get geometryType(){return le[this.profile]||"mesh"}set renderer(e){c$3(e,this.fieldsIndex),this._set("renderer",e);}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=this.associatedLayer?.capabilities??t$2,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:s,supportsUploadWithItemId:i,supportsGeometryUpdate:o,supportsReturnServiceEditsInSourceSpatialReference:a},data:{supportsZ:n$1,supportsM:p,isVersioned:l,supportsAttachment:d},operations:{supportsEditing:y,supportsAdd:u,supportsUpdate:c,supportsDelete:h,supportsQuery:f,supportsQueryAttachments:m,supportsAsyncConvert3D:g}}=e,v=e.operations.supportsChangeTracking,b=!!this.associatedLayer?.infoFor3D&&n();return {query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:a,supportsRollbackOnFailure:s,supportsGeometryUpdate:b&&o,supportsUploadWithItemId:i},data:{supportsAttachment:d,supportsZ:n$1,supportsM:p,isVersioned:l},operations:{supportsQuery:f,supportsQueryAttachments:m,supportsEditing:y&&v,supportsAdd:b&&u&&v,supportsDelete:b&&h&&v,supportsUpdate:c&&v,supportsAsyncConvert3D:g}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){this._overrideIfSome("editingEnabled",e);}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return !e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return !e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return null!=r&&pe[r]?pe[r]:(s$4.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=null!=e?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(f).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>t$3(this,{origin:"service"},t))).then((()=>c$3(this.renderer,this.fieldsIndex))).then((()=>this.finishLoadEditablePortalLayer(e)));return this.addResolvingPromise(r),Promise.resolve(this)}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load());}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference);}catch(e){s$4.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null;}}createQuery(){const e=new b$1;return "mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}async queryCachedAttributes(e,t){const r=b$2(this.fieldsIndex,await n$1(this,p$1(this)));return le$1(this.parsedUrl.path,this.attributeStorageInfo??[],e,t,r)}async queryCachedFeature(e,r){const s=await this.queryCachedAttributes(e,[r]);if(!s||0===s.length)throw new s$5("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const i=new h$1;return i.attributes=s[0],i.layer=this,i.sourceLayer=this,i}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(s$4.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return p$2(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new s$5("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load();}catch(e){throw new s$5("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new s$5("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new s$5("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const s of this.statisticsInfo)if(s.name===r.name){const e=V$1(this.parsedUrl.path,s.href);return j$1(e,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new s$5("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(K.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(K.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await import('./editingSupport-a5b3842f.js');if(await this.load(),!this.associatedLayer)throw new s$5(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),r(this,this.associatedLayer.source,e,t)}async uploadAssets(e,t){if(await this.load(),null==this.associatedLayer)throw new s$5(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&!oe.includes(e.layerType))throw new s$5("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new s$5("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new s$5("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(e,t){let r=!1,s=!1;if(null==e)r=!0,s=!0;else {const i=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,s=i;break;case"vertex-reference-frame":r=!0,s=!i;break;default:r=!1;}}if(!r)throw new s$5("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!s)throw new s$5("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference);}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else {if("mesh-pyramids"!==this.profile)throw new s$5("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject");}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!this.associatedLayer?.fields?.some((t=>t&&e.name===t.name)),s={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=s;}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride();}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()));}e&&this._set("fields",e);}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=e$1(this);for(let r=0;r<e.length;r++){const s=e[r],i=this.originIdOf(s),o=this.associatedLayer.originIdOf(s);i<o&&(o===r$1.SERVICE||o===r$1.PORTAL_ITEM)&&t.setAtOrigin(s,this.associatedLayer[s],o);}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.editingInfo?.lastEditDate,t=this.associatedLayer?.serverGens,r=this.associatedLayer?.getAtOrigin("fullExtent","service");if(!n()||null==this.associatedLayer?.infoFor3D||!r||!w(this.associatedLayer?.url)||!e||this.serviceUpdateTimeStamp?.lastUpdate===e.getTime()||!this.serviceUpdateTimeStamp&&t?.minServerGen===t?.serverGen)return;e$1(this).setAtOrigin("fullExtent",r.clone(),r$1.SERVICE);}async _setAssociatedFeatureLayer(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const t=new i$3(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch();}catch(r){d$1(r)||this._logWarningOnPopupEnabled();}}async _logWarningOnPopupEnabled(){await j$3((()=>this.popupEnabled&&null!=this.popupTemplate));const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?s$4.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):s$4.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`);}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"relative-to-scene"===e.mode&&s$4.getLogger(this).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&s$4.getLogger(this).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"));}};e([y({types:{key:"type",base:t$4,typeMap:{selection:p$3}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],ne.prototype,"featureReduction",void 0),e([y({type:[s],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],ne.prototype,"rangeInfos",void 0),e([y({json:{read:!1}})],ne.prototype,"associatedLayer",void 0),e([y({type:["show","hide"]})],ne.prototype,"listMode",void 0),e([y({type:["ArcGISSceneServiceLayer"]})],ne.prototype,"operationalLayerType",void 0),e([y({json:{read:!1},readOnly:!0})],ne.prototype,"type",void 0),e([y({...ae.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ne.prototype,"fields",void 0),e([y()],ne.prototype,"types",null),e([y()],ne.prototype,"typeIdField",null),e([y()],ne.prototype,"templates",null),e([y()],ne.prototype,"formTemplate",null),e([y({readOnly:!0})],ne.prototype,"fieldsIndex",null),e([y({type:p$4,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],ne.prototype,"floorInfo",void 0),e([y(ae.outFields)],ne.prototype,"outFields",void 0),e([y({type:s$3,readOnly:!0,json:{read:!1}})],ne.prototype,"nodePages",void 0),e([o("service","nodePages",["nodePages","pointNodePages"])],ne.prototype,"readNodePages",null),e([y({type:[l$3],readOnly:!0})],ne.prototype,"materialDefinitions",void 0),e([y({type:[u$1],readOnly:!0})],ne.prototype,"textureSetDefinitions",void 0),e([y({type:[m],readOnly:!0})],ne.prototype,"geometryDefinitions",void 0),e([y({readOnly:!0})],ne.prototype,"serviceUpdateTimeStamp",void 0),e([y({readOnly:!0})],ne.prototype,"attributeStorageInfo",void 0),e([y({readOnly:!0})],ne.prototype,"statisticsInfo",void 0),e([y({type:V.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],ne.prototype,"excludeObjectIds",void 0),e([y({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],ne.prototype,"definitionExpression",void 0),e([y({type:d,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],ne.prototype,"filter",void 0),e([y({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],ne.prototype,"path",void 0),e([y(d$2)],ne.prototype,"elevationInfo",null),e([y({type:String})],ne.prototype,"geometryType",null),e([y(m$1)],ne.prototype,"labelsVisible",void 0),e([y({type:[C],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:i$4},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:i$4},write:!0}})],ne.prototype,"labelingInfo",void 0),e([y(c$4)],ne.prototype,"legendEnabled",void 0),e([y({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return void 0!==r?r$2(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],ne.prototype,"opacity",void 0),e([y({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ne.prototype,"priority",void 0),e([y({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ne.prototype,"semantic",void 0),e([y({types:n$2,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],ne.prototype,"renderer",null),e([y({json:{read:!1}})],ne.prototype,"cachedDrawingInfo",void 0),e([o("service","cachedDrawingInfo")],ne.prototype,"readCachedDrawingInfo",null),e([y({readOnly:!0,json:{read:!1}})],ne.prototype,"capabilities",null),e([y({type:Boolean,json:{read:!1}})],ne.prototype,"editingEnabled",null),e([y({readOnly:!0,json:{write:!1,read:!1}})],ne.prototype,"infoFor3D",null),e([y(p$5)],ne.prototype,"popupEnabled",void 0),e([y({type:k,json:{name:"popupInfo",write:!0}})],ne.prototype,"popupTemplate",void 0),e([y({readOnly:!0,json:{read:!1}})],ne.prototype,"defaultPopupTemplate",null),e([y({type:String,json:{read:!1}})],ne.prototype,"objectIdField",void 0),e([o("service","objectIdField",["objectIdField","fields"])],ne.prototype,"readObjectIdField",null),e([y({type:String,json:{read:!1}})],ne.prototype,"globalIdField",void 0),e([o("service","globalIdField",["globalIdField","fields"])],ne.prototype,"readGlobalIdField",null),e([y({readOnly:!0,type:String,json:{read:!1}})],ne.prototype,"displayField",null),e([y({type:String,json:{read:!1}})],ne.prototype,"profile",void 0),e([o("service","profile",["store.profile"])],ne.prototype,"readProfile",null),e([y({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],ne.prototype,"normalReferenceFrame",void 0),e([y(l$4)],ne.prototype,"screenSizePerspectiveEnabled",void 0),ne=e([a("esri.layers.SceneLayer")],ne);const pe={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},le={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},de=ne;

export default de;

//# sourceMappingURL=SceneLayer-7289f5b0.js.map