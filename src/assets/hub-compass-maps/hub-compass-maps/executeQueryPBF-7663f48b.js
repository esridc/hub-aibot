import { cX as t, aG as r, aU as u$1, cD as b, cR as d$1, cQ as f } from './hub-compass-map-f4225e12.js';
import { I as It, s as st } from './featureConversionUtils-aa77f433.js';
import { c as c$1 } from './query-2dbdcab5.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function i(e,t){return t}function n$1(e,t,r,s){switch(r){case 0:return d(e,t+s,0);case 1:return "lowerLeft"===e.originPosition?d(e,t+s,1):l(e,t+s,1)}}function a(e,t,r,s){return 2===r?d(e,t,2):n$1(e,t,r,s)}function h(e,t,r,s){return 2===r?d(e,t,3):n$1(e,t,r,s)}function u(e,t,r,s){return 3===r?d(e,t,3):a(e,t,r,s)}function d({translate:e,scale:t},r,s){return e[s]+r*t[s]}function l({translate:e,scale:t},r,s){return e[s]-r*t[s]}class c{constructor(e){this._options=e,this.geometryTypes=["esriGeometryPoint","esriGeometryMultipoint","esriGeometryPolyline","esriGeometryPolygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=i,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{};}createFeatureResult(){return {fields:[],features:[]}}finishFeatureResult(e){if(this._options.applyTransform&&(e.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!e.hasZ)return;const t$1=t(e.geometryType,this._options.sourceSpatialReference,e.spatialReference);if(null!=t$1)for(const r of e.features)t$1(r.geometry);}createSpatialReference(){return {}}addField(t,r$1){const s=t.fields;r(s),s.push(r$1);const o=s.map((e=>e.name));this._attributesConstructor=function(){for(const e of o)this[e]=null;};}addFeature(e,t){e.features.push(t);}prepareFeatures(e){switch(this._transform=e.transform,this._options.applyTransform&&e.transform&&(this._applyTransform=this._deriveApplyTransform(e)),this._vertexDimension=2,e.hasZ&&this._vertexDimension++,e.hasM&&this._vertexDimension++,e.geometryType){case"esriGeometryPoint":this.addCoordinate=(e,t,r)=>this.addCoordinatePoint(e,t,r),this.createGeometry=e=>this.createPointGeometry(e);break;case"esriGeometryPolygon":this.addCoordinate=(e,t,r)=>this._addCoordinatePolygon(e,t,r),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"esriGeometryPolyline":this.addCoordinate=(e,t,r)=>this._addCoordinatePolyline(e,t,r),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"esriGeometryMultipoint":this.addCoordinate=(e,t,r)=>this._addCoordinateMultipoint(e,t,r),this.createGeometry=e=>this._createMultipointGeometry(e);}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,{attributes:new this._attributesConstructor}}allocateCoordinates(){}addLength(e,t,r){0===this._lengths.length&&(this._toAddInCurrentPath=t),this._lengths.push(t);}addQueryGeometry(e,t){const{queryGeometry:r,queryGeometryType:i}=t,n=It(r.clone(),r,!1,!1,this._transform),a=st(n,i,!1,!1);e.queryGeometryType=i,e.queryGeometry={...a};}createPointGeometry(e){const t={x:0,y:0,spatialReference:e.spatialReference};return e.hasZ&&(t.z=0),e.hasM&&(t.m=0),t}addCoordinatePoint(e,r,s){const o=u$1(this._transform,"transform");switch(r=this._applyTransform(o,r,s,0),s){case 0:e.x=r;break;case 1:e.y=r;break;case 2:"z"in e?e.z=r:e.m=r;break;case 3:e.m=r;}}_transformPathLikeValue(e,r){let s=0;r<=1&&(s=this._previousCoordinate[r],this._previousCoordinate[r]+=e);const o=u$1(this._transform,"transform");return this._applyTransform(o,e,r,s)}_addCoordinatePolyline(e,t,r){this._dehydratedAddPointsCoordinate(e.paths,t,r);}_addCoordinatePolygon(e,t,r){this._dehydratedAddPointsCoordinate(e.rings,t,r);}_addCoordinateMultipoint(e,t,r){0===r&&e.points.push([]);const s=this._transformPathLikeValue(t,r);e.points[e.points.length-1].push(s);}_createPolygonGeometry(e){return {rings:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createPolylineGeometry(e){return {paths:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createMultipointGeometry(e){return {points:[],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_dehydratedAddPointsCoordinate(e,t,r){0===r&&0==this._toAddInCurrentPath--&&(e.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const s=this._transformPathLikeValue(t,r),o=e[e.length-1];0===r&&(this._coordinateBufferPtr=0,this._coordinateBuffer=new Array(this._vertexDimension),o.push(this._coordinateBuffer)),this._coordinateBuffer[this._coordinateBufferPtr++]=s;}_deriveApplyTransform(e){const{hasZ:t,hasM:r}=e;return t&&r?u:t?a:r?h:n$1}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
async function s(r,e,t){const s=await n(r,b.from(e),t);return d$1.fromJSON(s)}async function n(o,s,n){const p=f(o),i={...n},u=b.from(s),m=!u.quantizationParameters,{data:f$1}=await c$1(p,u,new c({sourceSpatialReference:u.sourceSpatialReference,applyTransform:m}),i);return f$1}

export { n };

//# sourceMappingURL=executeQueryPBF-7663f48b.js.map