import { an as n$3, ao as v, ap as i$1, aq as f$3, ar as o$5, as as d$3, at as k, au as i$2, av as v$1, aw as q, ax as u$1, ay as a$1, x as u$2, e as has, az as s$3, $ as a$2, a0 as m$2, aA as n$4, J as l$1, j as s$4, aB as R$1, aC as M, aD as s$5, W as d$5, aE as f$5, aF as f$6, aG as r$6, aH as s$6, aI as m$3, aJ as p$4, aK as l$2, aL as u$4, aM as O, aN as y$3, aO as N, a1 as e$7, a2 as y$4, a3 as a$5 } from './hub-compass-map-f4225e12.js';
import { s as se$1, t as tt, a as ee, i as i$3 } from './cimAnalyzer-51b7fc99.js';
import { a as a$4 } from './normalizeUtilsSync-ebd062ab.js';
import { f as f$7, g as g$3 } from './projectionSupport-b10f8928.js';
import { X } from './definitions-2a5e2c90.js';
import { x as x$1, F, j, H, Y, P, R, t as te, S } from './color-07edd940.js';
import { c, u } from './VertexArrayObject-2a8cdbad.js';
import { F as F$1 } from './enums-f1bebe6f.js';
import { m as m$1, r as r$3, f as f$4, h as h$2, T, _ as _$1, g as g$2, p as p$3, u as u$3, x as x$3, c as c$1 } from './AttributeStoreView-00808734.js';
import { U } from './GeometryUtils-e7f92760.js';
import { a as e$6, o as o$6, x as x$2, b as a$3, E } from './Matcher-23cbbc6b.js';
import { h as h$1, I, r as r$4, B as B$1 } from './ComputedAttributeStorage-454517fa.js';
import { o as ot, C, d as dt, h as ht, $ } from './featureConversionUtils-aa77f433.js';
import { L, d as d$4 } from './quantizationUtils-af65af81.js';
import { t as t$5 } from './OptimizedGeometry-d99be84d.js';
import { r as r$5 } from './cimSymbolUtils-5a00cf74.js';
import { createSymbolSchema as o$7 } from './createSymbolSchema-f3e33196.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t$4=-1;class e$5{constructor(){this._dirties=[{vertexFrom:t$4,vertexCount:t$4,indexFrom:t$4,indexCount:t$4,allDirty:!1},{vertexFrom:t$4,vertexCount:t$4,indexFrom:t$4,indexCount:t$4,allDirty:!1},{vertexFrom:t$4,vertexCount:t$4,indexFrom:t$4,indexCount:t$4,allDirty:!1},{vertexFrom:t$4,vertexCount:t$4,indexFrom:t$4,indexCount:t$4,allDirty:!1},{vertexFrom:t$4,vertexCount:t$4,indexFrom:t$4,indexCount:t$4,allDirty:!1}];}hasDirty(){return this._dirties.some((e=>e.indexCount!==t$4||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=t$4,e.indexCount=t$4,e.vertexFrom=t$4,e.vertexCount=t$4,e.allDirty=!1;}markAllDirty(){for(const t of this._dirties)t.allDirty=!0;}forEach(e){for(let r=0;r<this._dirties.length;++r){const{indexCount:i,indexFrom:o,vertexCount:n,vertexFrom:x,allDirty:l}=this._dirties[r],s={};let d,m=!1;(l||x!==t$4&&n>0)&&(s.geometry={count:n,from:x,allDirty:l},m=!0),(l||o!==t$4&&i>0)&&(d={count:i,from:o,allDirty:l},m=!0),m&&e({indices:d,vertices:s},r);}}markDirtyIndices(e,r,i){const o=this._dirties[e],n=r,x=i;if(!o.allDirty)if(o.indexCount!==t$4){const t=Math.min(o.indexFrom,n),e=Math.max(o.indexFrom+o.indexCount,n+x)-t;o.indexFrom=t,o.indexCount=e;}else o.indexFrom=n,o.indexCount=x;}markDirtyVertices(e,r,i,o){const n=this._dirties[e],x=i,l=o;if(!n.allDirty)if(n.vertexCount!==t$4){const t=Math.min(n.vertexFrom,x),e=Math.max(n.vertexFrom+n.vertexCount,x+l)-t;n.vertexFrom=t,n.vertexCount=e;}else n.vertexFrom=x,n.vertexCount=l;}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class e$4{get largestRange(){return this._largestRange}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange();}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e);}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e);}findBestRange(e){let t=this._parent._freeHead,n=null;for(;null!==t;)t.count>=e&&(!n||t.count-e<n.count-e)&&(n=t),t=t.next;return n}findAdjacentRanges(e,t){let n=!0,r=!1,s=null,o=this._parent._freeHead;for(;n&&!r;){const a=null!==s?s.from+s.count:0,l=null!==o?o.from:this._parent._size;e>=a&&e+t<=l?(n=!1,r=!0):null!==o?(s=o,o=o.next):n=!1;}return [s,o]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e;}}class t$3{constructor(t,n){this._allocated=0,this._size=t,this._freeHead=t>0?{from:0,count:t,prev:null,next:null}:null,this._bookKeeper=n||new e$4(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead);}allocate(e){const n=this._bookKeeper.findBestRange(e);if(null==n)return -1;const r=n.from,s=n.count;if(n.from+=e,n.count-=e,this._bookKeeper.rangeResized(n,r,s),this._allocated+=e,0===n.count){const e=null!==n.prev?this._freeHead:n.next;t$3._removeRange(n),this._freeHead=e;}return r}free(e,n){const[r,s]=this._bookKeeper.findAdjacentRanges(e,n),o={from:e,count:n,prev:r??null,next:s??null};if(null!=r&&(r.next=o),null!=s&&(s.prev=o),this._bookKeeper.rangeCreated(o),this._allocated-=n,null!=s&&o.from+o.count===s.from){const e=o.from,n=o.count;t$3._fuse(o,s),t$3._removeRange(s),this._bookKeeper.rangeResized(o,e,n),this._bookKeeper.rangeResized(s,void 0,0);}if(null!=r&&r.from+r.count===o.from){const e=r.from,n=r.count;t$3._fuse(r,o),t$3._removeRange(o),this._bookKeeper.rangeResized(r,e,n),this._bookKeeper.rangeResized(o,void 0,0);}this._freeHead=null!==o.prev?this._freeHead:o;}get fragmentation(){const e=this._size-this._allocated;if(0===e)return 0;return 1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null);}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const s$2=["FILL","LINE","MARKER","TEXT","LABEL"];function o$4(e){const t=e.getStrides(),r={};for(let i=0;i<t.length;i++)r[s$2[i]]=t[i];return r}const n$2=.5;class d$2{constructor(r,i,s,o){this._strides=r,this._displayList=i,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const n in r){this._freeListsAndStorage[n]={vtxFreeList:o?new t$3(o):null,idxFreeList:o?new t$3(o):null,vertexBuffers:{},indexBuffer:o?new Uint32Array(o):null};for(const e in r[n])this._freeListsAndStorage[n].vertexBuffers[e]={data:o?x$1(o,r[n][e]):null,stride:r[n][e]};}}static fromTileData(t,i){const n=o$4(t),a=[0,0,0,0,0],x=[0,0,0,0,0];for(const e of t.tileDisplayData.displayObjects)for(const t of e.displayRecords)a[t.geometryType]=Math.max(a[t.geometryType],t.vertexFrom+t.vertexCount),x[t.geometryType]=Math.max(x[t.geometryType],t.indexFrom+t.indexCount);const u=new d$2(n,t.tileDisplayData.displayList,i,void 0),f=t.tileBufferData?.geometries??[];for(let o=0;o<f.length;++o){const t=a[o],i=x[o],n=f[o],d=s$2[o],c=u._storageFor(d),l=f[o].indexBuffer;c.indexBuffer=l,c.idxFreeList=new t$3(l.length),c.idxFreeList.allocate(i);let m=0;for(const e in n.vertexBuffer){const t=f[o].vertexBuffer[e];c.vertexBuffers[e].data=t.data,c.vertexBuffers[e].stride=t.stride;const i=F(t.stride),s=t.data.length*i/t.stride;m||(m=s);}c.vtxFreeList=new t$3(m),c.vtxFreeList.allocate(t);}return u}delete(e){const t=s$2[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0;}setMeshData(e,t,r,o,n){const d=s$2[e.geometryType];let a,x;e.meshData=null,void 0===e.vertexFrom?(x=t.vertexCount,a=this._allocateVertices(d,x)):t.vertexCount>e.vertexCount?(this._freeVertices(d,e.vertexFrom,e.vertexCount),x=t.vertexCount,a=this._allocateVertices(d,x)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,x=e.vertexCount):(this._freeVertices(d,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,x=t.vertexCount);let u,f,c,l=!0;if(void 0===e.indexFrom?(u=n,c=t.indexCount,f=this._allocateIndices(d,c)):t.indexCount>e.indexCount?(u=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom,e.indexCount),c=t.indexCount,f=this._allocateIndices(d,c)):t.indexCount===e.indexCount?(l=!1,f=e.indexFrom,c=e.indexCount):(u=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),f=e.indexFrom,c=t.indexCount),-1!==a&&-1!==f){const s=this._storageFor(d);if(j(a,f,s.vertexBuffers,s.indexBuffer,t,r,o),e.vertexFrom=a,e.indexFrom=f,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount);}return l&&this._displayList.addToList(e,u),!0}return -1!==a&&this._freeVertices(d,a,x),-1!==f&&this._freeIndices(d,f,c),e.setMeshDataFromBuffers(t,r,o),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const r=t.vertexBuffer,o=t.indexBuffer,n=s$2[e.geometryType],d=this._allocateVertices(n,e.vertexCount);if(-1===d)return this._freeVertices(n,d,e.vertexCount),!1;const a=this._allocateIndices(n,e.indexCount);if(-1===a)return this._freeVertices(n,d,e.vertexCount),this._freeIndices(n,a,e.indexCount),!1;const x=this._storageFor(n);if(j(d,a,x.vertexBuffers,x.indexBuffer,e,r,o),e.vertexFrom=d,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,d,e.vertexCount);}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const r=this._storageFor(e),i=r.vtxFreeList?.allocate(t);if(null==i||-1===i)return -1;const s=r.vtxFreeList?.fragmentation;return null==s||s>n$2?-1:i}_freeVertices(e,t,r){const i=this._storageFor(e);i.vtxFreeList?.free(t,r);}_freeIndices(e,t,r){const i=this._storageFor(e);i.idxFreeList?.free(t,r);}_allocateIndices(e,t){const r=this._storageFor(e),i=r.idxFreeList?.allocate(t);if(null==i||-1===i)return -1;const s=r.idxFreeList?.fragmentation;return null==s||s>n$2?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class o$3{constructor(a){this.geometryMap=H((()=>({indexBuffer:c.createIndex(a,F$1.STATIC_DRAW),vao:null})),((e,s)=>({vertexBuffer:c.createVertex(a,Y[s])})));}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao?.disposeVAOOnly(),t.data.indexBuffer?.dispose();for(const e in t.buffers)t.buffers[e]?.data.vertexBuffer.dispose();}}}get(e){const t=this.geometryMap[e];return {getVAO(e,r,s){if(!t.data.vao){const o={};for(const e in t.buffers)o[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new u(e,s,r,o,t.data.indexBuffer);}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,r)=>{this._upload(t,r,e);}));}_upload(e,t,r){if(e.indices&&(e.indices.allDirty?this._uploadIndices(r,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(r,t,e.indices.from,e.indices.count)),e.vertices){const s=e.vertices;for(const e in s){const a=s[e];a.allDirty?this._uploadVertices(r,t,e):null!=a.from&&null!=a.count&&this._uploadVertices(r,t,e,a.from,a.count);}}}_uploadVertices(e,t,r,s,a){const o=this.geometryMap[t];if(!o)return;const f=e.geometries[t].vertexBuffer[r];if(!f)return;const{data:i,stride:n}=f;if(o.buffers[r]&&i.length>0){const e=n/i.BYTES_PER_ELEMENT;null!=s&&null!=a?o.buffers[r].data.vertexBuffer.setSubData(i,s*e,s*e,(s+a)*e):o.buffers[r].data.vertexBuffer.setData(i);}}_uploadIndices(e,t,r,s){const a=this.geometryMap[t];if(!a)return;const o=e.geometries[t].indexBuffer;a.data.indexBuffer&&o.length>0&&(null!=r&&null!=s?a.data.indexBuffer.setSubData(o,r,r,r+s):a.data.indexBuffer.setData(o));}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class a extends m$1{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new e$5;}destroy(){super.destroy(),this.clear();}get hasData(){return !!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(t){return this._wglBuffers&&this._wglBuffers.has(t)?this._wglBuffers.get(t):null}getDisplayList(){return this._displayList}patch(s){if(!0===s.clear)return this.clear(),void(this._hasData=!1);const i=s.addOrUpdate,a=s.remove;!this._data&&i&&i.tileDisplayData?.displayObjects.length?(i.tileDisplayData.computeDisplayList(),this._dirtyMap=new e$5,this._dispRecStore=d$2.fromTileData(i,this._dirtyMap),this._data=i,this._dirtyMap.markAllDirty(),this._hasData=!0,s.end&&this.ready()):this._data&&(i&&i.tileDisplayData?.displayObjects.length||a.length)?this._doPatchData(s):s.end&&this.ready(),s.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change");}commit(t){t.time&&t.time===this._lastCommitTime||(this._lastCommitTime=t.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new o$3(t.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())));}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null);}_doPatchData(t){this._invalidated=!0,this._patchData(t)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=d$2.fromTileData(this._data,this._dirtyMap)),this.requestRender();}_patchData(t){let e=!0;const s=t.addOrUpdate&&t.addOrUpdate.tileDisplayData&&t.addOrUpdate.tileDisplayData.displayObjects||[],i=(t.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);let a;i.length>0&&(a=new Set(i));const l=this._data.tileDisplayData;for(const r of i){const t=l.displayObjectRegistry.get(r);if(t){l.displayList.removeFromList(t.displayRecords);for(const e of t.displayRecords)this._dispRecStore.delete(e);l.displayObjectRegistry.delete(r);}}a?.size&&(l.displayObjects=l.displayObjects.filter((t=>!a.has(t.id))));for(const r of s){let s,i=l.displayObjectRegistry.get(r.id);if(i){const t=i.displayRecords;i.set(r),i.displayRecords=t;const e=i.displayRecords.length;for(let s=0;s<e;++s){const t=i.displayRecords[s],e=r.displayRecords[s];(s>=r.displayRecords.length||t.geometryType!==e.geometryType||t.symbolLevel!==e.symbolLevel||t.zOrder!==e.zOrder||t.materialKey!==e.materialKey)&&(this._dispRecStore.delete(i.displayRecords[s]),s<r.displayRecords.length&&(i.displayRecords[s]=void 0));}i.displayRecords.length=r.displayRecords.length;}else {let t;i=r.copy(),i.displayRecords=[],l.displayObjectRegistry.set(r.id,i);const e=l.displayObjects;if(null!=i.insertAfter)if(s={},i.insertAfter>=0){const s=l.displayObjectRegistry.get(i.insertAfter);s?(t=e.indexOf(s)+1,t<e.length?e.splice(t,0,i):(e.push(i),t=e.length)):(e.push(i),t=e.length);}else e.unshift(i),t=0;else e.push(i),t=e.length;if(s){const i=r.displayRecords.length>0?1:0;let a=0;for(let r=t-1;r>=0&&a<i;--r)for(let t=e[r].displayRecords.length-1;t>=0&&a<i;--t){const i=e[r].displayRecords[t],d=l.displayList.getDPInfoType();s[d]||(s[d]=i,++a);}}}const a=r.displayRecords.length;for(let d=0;d<a;++d){const a=r.displayRecords[d];let o=i.displayRecords[d];o?(o.meshData=a.meshData,o.materialKey=a.materialKey):(o=a.copy(),o.vertexFrom=void 0,o.indexFrom=void 0,i.displayRecords[d]=o);const h=a.geometryType,p=l.displayList.getDPInfoType(),y=t.addOrUpdate.tileBufferData.geometries[h],c=y.vertexBuffer,n=y.indexBuffer;let f;s&&(f=s[p]?l.displayList.splitAfter(s[p]):-1),e=this._dispRecStore.setMeshData(o,a,c,n,f)&&e,s&&null!=o.indexFrom&&null!=o.indexFrom&&(s[p]=o);}}return e}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class e$3{constructor(){this._byGeometryType=null;}get satisfied(){return !this._byGeometryType}reset(){this._byGeometryType=null;}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,i){if(!t&&!i)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const s=this._byGeometryType[e];s.vertices+=t,s.indices+=i;}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r$2=5;class f$2{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}];}clone(){const e=new f$2;for(let r=0;r<this.geometries.length;r++){const f=this.geometries[r],t=e.geometries[r];t.indexBuffer=f.indexBuffer.slice(),t.vertexBuffer={};for(const e in f.vertexBuffer){const{data:r,stride:i}=f.vertexBuffer[e];t.vertexBuffer[e]={data:r.slice(),stride:i};}}return e}static deserialize(t){const i=new f$2;for(let f=0;f<r$2;++f){i.geometries[f].indexBuffer=new Uint32Array(t.geometries[f].indexBuffer),i.geometries[f].vertexBuffer={};for(const r in t.geometries[f].vertexBuffer)i.geometries[f].vertexBuffer[r]={data:P(t.geometries[f].vertexBuffer[r].data,t.geometries[f].vertexBuffer[r].stride),stride:t.geometries[f].vertexBuffer[r].stride};}return i}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let f=0;f<r$2;++f)for(const r in this.geometries[f].vertexBuffer)e.geometries[f].vertexBuffer[r]={data:this.geometries[f].vertexBuffer[r].data.buffer,stride:this.geometries[f].vertexBuffer[r].stride};return e}getBuffers(){const e=[];for(let f=0;f<r$2;++f){e.push(this.geometries[f].indexBuffer.buffer);for(const r in this.geometries[f].vertexBuffer)e.push(this.geometries[f].vertexBuffer[r].data.buffer);}return e}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function t$2(e,t,n,...o){t<e.length?e.splice(t,n,...o):e.push(...o);}class n$1{constructor(){this.symbolLevels=[];}replay(t,n,o){for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const{geometryType:i,materialKey:l,indexFrom:s,indexCount:m}=r,y=U.load(l).symbologyType,d=t.painter.getBrush(i,y),u={geometryType:i,materialKey:l,indexFrom:s,indexCount:m,target:n.getGeometry(i)};d.prepareState(t),d.drawGeometry(t,n,u,o);}}}get empty(){return !this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0;}addToList(e,t){if(Array.isArray(e))for(const n of e)this._addToList(n,t);else this._addToList(e,t);}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const n of e)t=this._removeFromList(n);return t}clone(){const e=new n$1;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),n=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<n;++r){const n=t[r];if(n.geometryType===e.geometryType&&i>n.indexFrom&&i<=n.indexFrom+n.indexCount){if(i<n.indexFrom+n.indexCount){const e=new o$2;e.geometryType=n.geometryType,e.materialKey=n.materialKey,e.indexFrom=i,e.indexCount=n.indexFrom+n.indexCount-i,t.splice(r+1,0,e),n.indexCount=i-n.indexFrom;}return r}}}_addToList(e,n){const i=e.symbolLevel,r=e.zOrder,l=this._getDisplayList(i,r),s=null!=n?n:l.length-1,m=s>=0&&s<l.length?l[s]:null;if(null!==m&&m.materialKey===e.materialKey&&m.indexFrom+m.indexCount===e.indexFrom&&m.geometryType===e.geometryType)m.indexCount+=e.indexCount;else {const n=new o$2;n.indexFrom=e.indexFrom,n.indexCount=e.indexCount,n.materialKey=e.materialKey,n.geometryType=e.geometryType,t$2(l,s+1,0,n);}}_removeFromList(e){const n=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(n,i),l=r.length;let s;for(let t=0;t<l;++t){const n=r[t];if(e.indexFrom+e.indexCount>n.indexFrom&&e.indexFrom<n.indexFrom+n.indexCount&&n.geometryType===e.geometryType){s=t;break}}if(void 0!==s){const n=r[s];if(e.indexFrom===n.indexFrom)return n.indexCount-=e.indexCount,n.indexFrom+=e.indexCount,0===n.indexCount&&t$2(r,s,1),s-1;if(e.indexFrom+e.indexCount===n.indexFrom+n.indexCount)return n.indexCount-=e.indexCount,0===n.indexCount?(t$2(r,s,1),s-1):s;{const i=n.indexFrom,l=e.indexFrom-n.indexFrom,m=e.indexCount,y=n.indexFrom+n.indexCount-(e.indexFrom+e.indexCount);n.indexCount=l;const d=new o$2;return d.geometryType=n.geometryType,d.materialKey=n.materialKey,d.indexFrom=i+l+m,d.indexCount=y,t$2(r,s+1,0,d),s}}return null}_getDisplayList(e,t){let n;const o=this.symbolLevels.length;for(let i=0;i<o;i++)if(this.symbolLevels[i].symbolLevel===e){n=this.symbolLevels[i];break}let s;n||(n=new l,n.symbolLevel=e,this.symbolLevels.push(n));const m=n.zLevels.length;for(let i=0;i<m;i++)if(n.zLevels[i].zLevel===t){s=n.zLevels[i];break}return s||(s=new r$1,s.geometryDPInfo=new i,s.zLevel=t,n.zLevels.push(s)),s.geometryDPInfo.unified||(s.geometryDPInfo.unified=[]),s.geometryDPInfo.unified}getDPInfoType(){return "unified"}}class o$2{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0;}clone(){const e=new o$2;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class i{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null;}clone(){const e=new i;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class r$1{constructor(){this.geometryDPInfo=new i;}clone(){const e=new r$1;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class l{constructor(){this.zLevels=[];}clone(){const e=new l;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t$1{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[];}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[];}update(t,e,a){for(const s in t)this.vertexData.set(s,t[s]);for(const s in this.vertexData)null===t[s]&&this.vertexData.delete(s);this.vertexCount=e,this.indexData=a;}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s$1{constructor(t,e,s,i=0,r=0){this.id=t,this.geometryType=e,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null;}get sortKey(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const t=new s$1(this.id,this.geometryType,this.materialKey);return t.vertexFrom=this.vertexFrom,t.vertexCount=this.vertexCount,t.indexFrom=this.indexFrom,t.indexCount=this.indexCount,t.zOrder=this.zOrder,t.symbolLevel=this.symbolLevel,t.meshData=this.meshData,t.minZoom=this.minZoom,t.maxZoom=this.maxZoom,t}setMeshDataFromBuffers(s,i,r){const o=new t$1;for(const t in i){const r=i[t].stride,a=i[t].data;if(!a)continue;const h=[],n=F(r);for(let t=0;t<r*s.vertexCount/n;++t)h[t]=a[t+r*s.vertexFrom/n];o.vertexData.set(t,h);}o.indexData.length=0;for(let t=0;t<s.indexCount;++t)o.indexData[t]=r[t+s.indexFrom]-s.vertexFrom;o.vertexCount=s.vertexCount,this.meshData=o;}readMeshDataFromBuffers(s,i){this.meshData?this.meshData.clear():this.meshData=new t$1;for(const t in s){const i=s[t].stride,r=s[t].data,o=[],a=F(i);for(let t=0;t<i*this.vertexCount/a;++t)o[t]=r[t+i*this.vertexFrom/a];this.meshData.vertexData.set(t,o);}this.meshData.indexData.length=0;for(let t=0;t<this.indexCount;++t)this.meshData.indexData[t]=i[t+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount;}writeMeshDataToBuffers(t,s,i,r){if(this.meshData){for(const i in s){const r=s[i].stride,o=this.meshData.vertexData.get(i),a=s[i].data,h=F(r);for(let e=0;e<r*this.meshData.vertexCount/h;++e)a[e+r*t/h]=o[e];}for(let e=0;e<this.meshData.indexData.length;++e)r[e+i]=this.meshData.indexData[e]+t;this.vertexFrom=t,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length;}}static writeAllMeshDataToBuffers(t,e,s){let i=0,r=0;for(const o of t)o.writeMeshDataToBuffers(i,e,r,s),i+=o.vertexCount,r+=o.indexCount;}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType;}serialize(t){return t.push(this.geometryType),t.push(this.materialKey),t.push(this.vertexFrom),t.push(this.vertexCount),t.push(this.indexFrom),t.push(this.indexCount),t.push(this.minZoom),t.push(this.maxZoom),t}static deserialize(t,e){const i=t.readInt32(),r=t.readInt32(),o=new s$1(e.id,i,r);return o.vertexFrom=t.readInt32(),o.vertexCount=t.readInt32(),o.indexFrom=t.readInt32(),o.indexCount=t.readInt32(),o.minZoom=t.readInt32(),o.maxZoom=t.readInt32(),o}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e$2(e,n){if(null!==n){e.push(n.length);for(const r of n)r.serialize(e);return e}e.push(0);}function n(e,n,r){const t=e.readInt32(),o=new Array(t);for(let i=0;i<o.length;i++)o[i]=n.deserialize(e,r);return o}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class e$1{constructor(s){this.insertAfter=null,this.id=s,this.displayRecords=[];}copy(){const s=new e$1(this.id);return s.set(this),s}clone(){const s=new e$1(this.id);return s.displayRecords=this.displayRecords.map((s=>s.clone())),s.insertAfter=this.insertAfter,s}set(s){this.id=s.id,this.displayRecords=s.displayRecords,this.insertAfter=s.insertAfter;}serialize(s){return s.push(this.id),e$2(s,this.displayRecords),s}static deserialize(i){const r=i.readInt32(),d=new e$1(r),o={id:r};return d.displayRecords=n(i,s$1,o)??[],d}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class e{constructor(){this.displayObjects=[],this._displayList=null;}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const s of this.displayObjects)this._displayObjectRegistry.set(s.id,s);}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new n$1;for(const s of this.displayObjects)for(const t of s.displayRecords)this._displayList.addToList(t);}clone(){const s=new e;return this.displayObjects&&(s.displayObjects=this.displayObjects.map((s=>s.clone()))),s}serialize(s){return e$2(s,this.displayObjects),s}_deserializeObjects(s){const i=s.readInt32(),e=new Array(i),a=new Map;for(let l=0;l<e.length;++l){const i=e$1.deserialize(s);e[l]=i,a.set(i.id,i);}this.displayObjects=e,this._displayList=null,this._displayObjectRegistry=a;}static deserialize(s){const t=new e;return t._deserializeObjects(s),t}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class t{constructor(e,t){this.data=e,this.stride=t;}static decode(r){const s=P(r.data,r.stride),n=r.stride;return new t(s,n)}static fromVertexVector(r){const s=P(r.data.buffer(),r.stride),n=r.stride;return new t(s,n)}}class r{constructor(e,t,r){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=r;}static decode(e){const s=e.geometryType,n=e.indexBuffer,o={};for(const r in e.namedBuffers)o[r]=t.decode(e.namedBuffers[r]);return new r(s,n,o)}static fromVertexData(s,n){const o=s.indices,c=P(s.vertices,s.stride),i=s.stride,d={geometry:new t(c,i)};return new r(n,o,d)}static fromVertexVectors(e){const s=e.geometryType,n=e.indexVector.buffer(),o={};let c;for(c in e.namedVectors)o[c]=t.fromVertexVector(e.namedVectors[c]);return new r(s,n,o)}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class s{get vertexCount(){const t=this.stride/4,e=this.data.length/t;return e!==(0|e)&&console.debug("Corrupted stride"),e}constructor(t,e){this.data=t,this.stride=e;}transfer(t,e){const r=this.data.buffer();t.vertexCount=this.vertexCount,t.data=r,t.stride=this.stride,e.push(r);}}class o$1{constructor(e,o,n){this.geometryType=e,this.indexVector=new e$6(Uint32Array,6*o),this.namedVectors={};const i=R(e,n);for(const t in i){const e=i[t];let n;switch(e%4){case 0:case 2:n=new e$6(Uint32Array,e*o);break;case 1:case 3:n=new e$6(Uint8Array,e*o);}this.namedVectors[t]=new s(n,e);}}get(t){return this.namedVectors[t].data}getVector(t){return this.namedVectors[t]}transfer(t,e){const r=this.indexVector.buffer(),s={};let o;for(o in e.push(r),this.namedVectors){const t=this.namedVectors[o];s[o]={},t.transfer(s[o],e);}t.geometryType=this.geometryType,t.indexBuffer=r,t.namedBuffers=s,this.destroy();}intoBuffers(){const t=r.fromVertexVectors(this);return this.destroy(),t}destroy(){this.indexVector=null,this.namedVectors=null;}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const d$1=new e$3,p$2=new e$3,D=5;function h(e,t){const r={};for(const s in e){const i={data:x$1(t,e[s]),stride:e[s]};r[s]=i;}return r}function x(e){return [e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}function y$2(e){const t=[[],[],[],[],[]],r=e;for(const s of r)for(const e of s.displayRecords)t[e.geometryType].push(e);return t}class B{constructor(){this.tileDisplayData=null,this.tileBufferData=null;}reshuffle(){if(d$1.reset(),!this.tileDisplayData)return;const t=y$2(this.tileDisplayData.displayObjects);for(const e of t)for(const t of e)t&&d$1.needMore(t.geometryType,t.meshData?t.meshData.vertexCount:t.vertexCount,t.meshData?t.meshData.indexData.length:t.indexCount);const r=t.length,i=new f$2;for(let s=0;s<r;++s){i.geometries[s].indexBuffer=new Uint32Array(Math.round(n$3*d$1.indicesFor(s)));const t=[],r=this.tileBufferData?.geometries[s].vertexBuffer;if(!r)continue;for(const e in r)t.push(r[e].stride);const a=B._computeVertexAlignment(t),n=Math.round(n$3*d$1.verticesFor(s)),f=B._align(n,a);for(const e in r){const t=r[e].stride;i.geometries[s].vertexBuffer[e]={stride:t,data:x$1(f,t)};}}p$2.reset(),this.tileDisplayData.displayList?.clear();for(let e=0;e<r;++e){const r=t[e];for(const t of r){if(t.meshData)t.writeMeshDataToBuffers(p$2.verticesFor(e),i.geometries[e].vertexBuffer,p$2.indicesFor(e),i.geometries[e].indexBuffer),t.meshData=null;else {const r=this.tileBufferData?.geometries[e];if(r){const s=r.vertexBuffer,o=r.indexBuffer,n=i.geometries[e].vertexBuffer,f=i.geometries[e].indexBuffer,l=p$2.verticesFor(e),u=p$2.indicesFor(e);j(l,u,n,f,t,s,o),t.vertexFrom=l,t.indexFrom=u;}}p$2.needMore(e,t.vertexCount,t.indexCount);}}const{displayList:n,displayObjects:f}=this.tileDisplayData;if(n)for(const e of f)n.addToList(e.displayRecords);this.tileBufferData=i;}getStrides(){const e=[],t=this.tileBufferData?.geometries;if(!t)return e;for(let r=0;r<t.length;++r){const s=t[r];e[r]={};for(const t in s.vertexBuffer)e[r][t]=s.vertexBuffer[t].stride;}return e}clone(){const e=new B;return e.tileBufferData=this.tileBufferData?.clone()??null,e.tileDisplayData=this.tileDisplayData?.clone()??null,e}_guessSize(){const e=this.tileDisplayData?.displayObjects??[],t=Math.min(e.length,4),r=12,s=40;let i=0;for(let o=0;o<t;o++)i=Math.max(i,e[o].displayRecords.length);return 2*(e.length*r+e.length*i*s)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new e$6(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}}static fromVertexData(e,r$1){const s={},i=new Map;for(const t of r$1)i.set(t.id,t);return te((r$1=>{const o=e.data[r$1];if(null!=o){const e=r$3.from(o.records).getCursor();for(;e.next();){const t=e.id,s=e.materialKey,o=e.indexFrom,a=e.indexCount,n=e.vertexFrom,l=e.vertexCount,u=i.get(t),c=new s$1(t,r$1,s);c.indexFrom=o,c.indexCount=a,c.vertexFrom=n,c.vertexCount=l,u.displayRecords.push(c);}s[r$1]=r.fromVertexData(o,r$1);}else s[r$1]=new o$1(r$1,0,S.DEFAULT).intoBuffers();})),B.fromMeshData({displayObjects:r$1,vertexBuffersMap:s})}static fromMeshData(e$1){const t=new B,r=new e,o=new f$2;r.displayObjects=e$1.displayObjects;for(const s in e$1.vertexBuffersMap){const t=s,r=e$1.vertexBuffersMap[t];o.geometries[t].indexBuffer=r.indexBuffer,o.geometries[t].vertexBuffer=r.namedBuffers;}return t.tileDisplayData=r,t.tileBufferData=o,t}static bind(e,t){const r=new B;return r.tileDisplayData=e,r.tileBufferData=t,r}static create(e$1,t){const r=new B;r.tileDisplayData=new e,r.tileDisplayData.displayObjects=e$1;const o=[0,0,0,0,0],a=[0,0,0,0,0],n=[[],[],[],[],[]];for(const s of e$1)for(const e of s.displayRecords)n[e.geometryType].push(e),o[e.geometryType]+=e.meshData.vertexCount,a[e.geometryType]+=e.meshData.indexData.length;const l=new f$2,u=x(t);for(let s=0;s<D;s++){const e=new Uint32Array(a[s]),t=h(u[s],o[s]);s$1.writeAllMeshDataToBuffers(n[s],t,e),l.geometries[s]={indexBuffer:e,vertexBuffer:t};}return r.tileBufferData=l,r}static _align(e,t){const r=e%t;return 0===r?e:e+(t-r)}static _computeVertexAlignment(e){let t=!1,r=!1;for(const s of e)s%4==2?t=!0:s%4!=0&&(r=!0);return r?4:t?2:1}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class o extends h$1{static from(s,n,i){const c=I.createInstance(),u=[],a=s.filter((r=>!!r.geometry));for(const e of a){const s=v(e.geometry);ot(u,[e],s,!1,!1,n);}return new o(c,u,i)}constructor(r,t,e){super(r,t,null),this._transform=e;}get geometryType(){const r=this._current;return r?r.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const r=new o(this.instance,this._features,this._transform);return this.copyInto(r),r}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const p$1=new t$5,y$1=new t$5,g$1="esriGeometryPolyline";function f$1(t){t.coords.length=0,t.lengths.length=0;}class d{constructor(){this.bounds=i$1(),this.graphic=null;}static acquire(t=null,e,s,r,i){let o;return 0===d._pool.length?o=new d:(o=d._pool.pop(),this._set.delete(o)),o.acquire(t,e,s,r,i),o}static release(t){t&&!this._set.has(t)&&(t.release(),this._pool.push(t),this._set.add(t));}static getCentroidQuantized(t,e){if(f$3(t.geometry)){const r=t.symbol;if(null==r)return null;if(r?.layers.length>0&&r.layers.some((t=>"text"===t.type||"marker"===t.type))){const r=o$5(t.geometry);return null!==r?L(e,{},{x:r[0],y:r[1]},!1,!1):null}}return null}acquire(t=null,e,s,r,i){t&&this.set(t,e,s,r,i);}release(){this.graphic=null,this.symbolResource=null,this.geometry=null;}get symbol(){return this.symbolResource.symbol}set(t,e,s,r,i){this.graphic=t,this.geometry=s,this.symbolResource=e,this.bounds=r,i&&(this.size=i);}getGeometryQuantized(t,s,r,o){const c=this.geometry,d=v(c);if(null==d)return null;switch(d){case"esriGeometryPolygon":{const e=c,{rings:s}=e;if(!s||0===s.length)return null;let r;if(r=1===s.length&&2===s[0].length?d$4(t,{paths:[[s[0][0],s[0][1]]]}):d$4(t,this.geometry),!r){const e={x:s[0][0][0],y:s[0][0][1]};if(r=d$4(t,e),r){const{x:t,y:e}=r;return {rings:[[[t-1,e],[1,-1],[1,1],[-1,1],[-1,-1]]]}}}return r}case"esriGeometryPolyline":{const e=c;f$1(p$1),f$1(y$1);const s=e.hasZ??!1,r=e.hasM??!1;return C(p$1,e),dt(y$1,p$1,s,r,g$1,t.scale[0]),ht(p$1,y$1,s,r,g$1,t),$(p$1,e.hasZ??!1,e.hasM??!1)}case"esriGeometryMultipoint":{const i=c,u=.5*o*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),h=d$3(r);let a=i.points;if(h){const[t,r]=h.valid,i=r-t;a=a.filter((o=>{if(o[0]+u>r||o[0]-u<t){const t=[...o];return o[0]+u>r?t[0]-=i:t[0]+=i,k(s,o,u)||k(s,t,u)}return k(s,o,u)}));}return 0===a.length?{points:a}:d$4(t,{points:a})}}return d$4(t,this.geometry)}}d._pool=[],d._set=new Set;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const m={minX:0,minY:0,maxX:0,maxY:0},p=i$1(),g=1e-5;function f(e,t,i,r,s){return m.minX=t,m.minY=i,m.maxX=r,m.maxY=s,e.search(m)}function _(e){return {minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class b{constructor(e,i,r,s,o,n,l){this._graphics=s,this._onAdd=o,this._onRemove=n,this._hashToCIM=l,this._index=i$2(9,_),this._itemByGraphic=new Map,this._inflatedSizeHelper=new se$1,this._tileInfoView=e,this._uidFieldName=r;const u=e.getClosestInfoForScale(i);u&&(this._resolution=this._tileInfoView.getTileResolution(u.level));}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new tt(e);}hitTest(e,t,s,o,l){e=v$1(e,this._tileInfoView.spatialReference);const u=.5*o*window.devicePixelRatio*s;p[0]=e-u,p[1]=t-u,p[2]=e+u,p[3]=t+u;const h=.5*o*(s+f$4),a=f(this._index,e-h,t-h,e+h,t+h);if(!a||0===a.length)return [];const d=[],m=i$1(),g=i$1();for(const i of a){const{geometry:e,symbolResource:t}=i;this._getSymbolBounds(m,t,e,g,l),g[3]=g[2]=g[1]=g[0]=0,q(m,p)&&i.graphic?.visible&&d.push(i);}if(0===d.length)return [];const _=this._hittestDrawHelper,b=[];for(const i of d){const{geometry:e,symbolResource:t}=i,{hash:r,textInfo:s}=t,n=this._hashToCIM.get(r);n&&(_.hitTest(p,n.symbol,e,s,l,o)&&b.push(i));}return b.sort(y),b.map((e=>e.graphic))}getGraphicsData(e,t,i){const r=this._searchForItems(t);if(0===r.length||0===i.length)return [];r.sort(((e,t)=>e.zorder-t.zorder)),r[0].insertAfter=-1;for(let a=1;a<r.length;a++)r[a].insertAfter=r[a-1].graphic.uid;r.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let s,o=0,n=0;const l=t.resolution,u=[],h={originPosition:"upperLeft",scale:[l,l],translate:[t.bounds[0],t.bounds[3]]};for(const c of i){for(n=-2;o<r.length;)if(s=r[o],o++,c.uid===s.graphic.uid){n=s.insertAfter;break}if(!s?.geometry||-2===n)continue;const i=s.getGeometryQuantized(h,t.bounds,this._tileInfoView.spatialReference,l),d$1={...s.graphic.attributes};d$1[this._uidFieldName]=c.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),u.push({centroid:d.getCentroidQuantized(s,h),geometry:i,attributes:d$1,symbol:s.symbol,groupId:s.groupId,insertAfter:n,zorder:s.zorder});}return u.sort(((e,t)=>e.zorder-t.zorder)),u}queryTileData(e,t){if(0===this._graphics.length)return [];const{bounds:i,resolution:r}=t,s=this._searchForItems(t),o=[];return 0===s.length||this._createTileGraphics(o,e,s,{originPosition:"upperLeft",scale:[r,r],translate:[i[0],i[3]]},t),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,i){if(!e||null==t)return;this.has(e)&&this.remove(e),this._onAdd(e);const r=[0,0,0,0],s=this._getSymbolBounds(null,t,i,r,0),o=d.acquire(e,t,i,null!=s?s:null,r);return this._itemByGraphic.set(e,o),i&&this._index.insert(o),o.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t?.bounds&&this._index.remove(t),this._itemByGraphic.delete(e);}updateZ(){const e=this._graphics.items;let t,i;for(let r=0;r<e.length;r++)i=e[r],t=this._itemByGraphic.get(i),t&&(t.zorder=r);}update(e,t,i){const r=this._itemByGraphic.get(e);r.groupId=null;const o=u$1(r.bounds);this._index.remove(r);const n=this._getSymbolBounds(r.bounds,t,i,r.size,0);return null!=n&&r.set(e,t,i,n,r.size),i&&this._index.insert(r),{oldBounds:o,newBounds:r.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,i=[];for(const[r,s]of t){const e=this._getSymbolBounds(s.bounds,s.symbolResource,s.geometry,s.size,0);s.geometry&&null!=e&&(s.bounds=e,i.push(s));}this._index.load(i);}clear(){this._itemByGraphic.clear(),this._index.clear();}_createTileGraphics(e,t,i,r,s){const o=this._uidFieldName,n=this._tileInfoView.spatialReference,{bounds:l,resolution:u}=s;let h,c,d$1,m;i.sort(((e,t)=>e.zorder-t.zorder));for(let p=0;p<i.length;p++){d$1=i[p],h=d$1.graphic,c=d$1.getGeometryQuantized(r,l,n,u),m=0===p?-1:i[p-1].graphic.uid;const s={...d$1.graphic.attributes};s[o]=h.uid,null==d$1.groupId&&(d$1.groupId=t.createTemplateGroup(d$1.symbol,null)),e.push({centroid:d.getCentroidQuantized(d$1,r),geometry:c,attributes:s,symbol:d$1.symbol,groupId:d$1.groupId,insertAfter:m,zorder:d$1.zorder});}}_searchForItems(e){const t=this._tileInfoView.spatialReference,r=e.bounds,s=d$3(t);if(s&&t.isWrappable){const[t,o]=s.valid,n=Math.abs(r[2]-o)<g,l=Math.abs(r[0]-t)<g;if((!n||!l)&&(n||l)){const s=e.resolution;let l;l=i$1(n?[t,r[1],t+s*f$4,r[3]]:[o-s*f$4,r[1],o,r[3]]);const u=f(this._index,r[0],r[1],r[2],r[3]),h=f(this._index,l[0],l[1],l[2],l[3]);return [...new Set([...u,...h])]}}return f(this._index,r[0],r[1],r[2],r[3])}_getSymbolBounds(t,r,s,n,l){if(!r||!r.symbol||!s)return null;if(t||(t=i$1()),a$1(t,s),!n||0===n[0]&&0===n[1]&&0===n[2]&&0===n[3]){const{hash:t,textInfo:i}=r,s=this._hashToCIM.get(t);if(!s)return null;n||(n=[0,0,0,0]);const o=this._inflatedSizeHelper.getSymbolInflateSize(n,s.symbol,this._cimResourceManager,l,i);n[0]=u$2(o[0]),n[1]=u$2(o[1]),n[2]=u$2(o[2]),n[3]=u$2(o[3]);}const u=this._resolution,a=se$1.safeSize(n);return t[0]-=a*u,t[1]-=a*u,t[2]+=a*u,t[3]+=a*u,t}}const y=(e,t)=>{const i=h$2(e.graphic),r=h$2(t.graphic);return i===r?t.zorder-e.zorder:i-r};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const se=has("esri-2d-graphic-debug");function ie(e,t,s){let i=s.get(e);return i||(i={tile:t,addedOrModified:[],removed:[]},s.set(e,i)),i}let re=class extends(s$3(a$2(m$2))){constructor(e){super(e),this._storage=new r$4,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.renderer=null,this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this);}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear();}_createMatcher(e,t,s){if(e){const i=T(e),r=_$1({indexCount:0,fields:{}},"feature",e,i);this._matcher=o$6(r,t,null,s);}}_createDisplayId(e){let t=this._displayIds.get(e);return t||(t=this._storage.createDisplayId(),this._displayIds.set(e,t)),t}initialize(){this._attributeStore=new B$1({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},n$4("2d")),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const e=e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible);},t=e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t);},s=new x$2(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new b(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,e,t,this._hashToCIM),this._meshFactory=new a$3(null,this.uid,s),this._templateStore=s,this.handles.add([l$1((()=>this._effectiveRenderer),(e=>{this._createMatcher(e,s,this.container.stage.resourceManager);for(const t of this.graphics)this._pendingUpdate.updated.add(t);this.requestUpdate();})),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{se&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const e=this.container.stage.resourceManager;this._createMatcher(this._effectiveRenderer,s,e),this._graphicStore.setResourceManager(e),this._attached=!0,this.notifyChange("updating");}))]);const i=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:i,removed:[]});}get _effectiveRenderer(){return "function"==typeof this.renderer?this.renderer():this.renderer}get updating(){return !this._attached||null!==this._updatingGraphicsTimer||this._pendingUpdate.added.size>0||this._pendingUpdate.removed.size>0||this._pendingUpdate.updated.size>0||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore?.updatingHandles.updating||this._processing}hitTest(e){if(!this.view||this.view.suspended)return [];const{resolution:t,rotation:s}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,s)}update(e){s$4(this._controller.signal);const t=e.state,{resolution:s}=t;if(this._graphicStore.updateLevel(s),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0;}}viewChange(){this.requestUpdate();}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback());}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e));}graphicUpdateHandler(e){const{graphic:t,property:s}=e;switch(s){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,t.visible),this._attributeStore.sendUpdates();}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e))).filter(R$1);this._attributeStore.setHighlight(e,t);}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===M(t)||0===s$5(t))return [];const s=g$2(t,this.view.spatialReference);return null!=s?[...new Set([...this.view.graphicsTileStore.boundsIntersections(s[0]),...this.view.graphicsTileStore.boundsIntersections(s[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){s$4(this._controller.signal);const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified),i=await this._processGraphics(t,s);return s$4(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0,clear:!1,sort:!1}),i}_patchTile(e,t){const s=this._tiles.get(e);s&&(this.container.onTileData(s,t),this.container.requestRender());}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const s of e.added)t.added.add(s);for(const s of e.moved)t.updated.add(s);for(const s of e.removed)this._pendingUpdate.added.has(s)?t.added.delete(s):t.removed.add(s);this._processing?this._needsProcessing=!0:this._updateGraphics();}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t);}const o=[],a=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],n=this._getIntersectingTiles(t);for(const e of n){r=e.id;ie(r,e,i).removed.push(this._displayIds.get(t.uid));}o.push(this._updateGraphic(t,null)),a[e]=t;}const n=s.length;for(let t=0;t<e.length;t++){const s=e[t];a[n+t]=s,this._graphicsSet.add(s),o.push(this._addGraphic(s));}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t){r=s.id;ie(r,s,i).removed.push(this._displayIds.get(e.uid));}this._graphicsSet.delete(e),this._graphicStore.remove(e);}let h;this._flipUpdatingGraphics(),await Promise.all(o);for(let e=0;e<a.length;e++){h=a[e];const t=this._getIntersectingTiles(h);for(const e of t){r=e.id;ie(r,e,i).addedOrModified.push(h);}}this._graphicStore.updateZ();const l=[];for(const[e,t]of i)l.push(this._updateTile(t));await Promise.all(l);}catch(o){d$5(o),0;}for(const a of t)try{const e=await this._getSymbolForGraphic(a,null);if(e){const t=e.hash();this._hashToExpandedSymbol.delete(t);}}catch(o){d$5(o),0;}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics());}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return null==e.geometry?null:{geometryType:v(e.geometry),spatialReference:f$5.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return s$4(this._controller.signal),null!=e.symbol?Promise.resolve(e.symbol):null!=this._effectiveRenderer?this._effectiveRenderer.getSymbolAsync(e,{scale:this.view.state.scale,signal:null!=t?t.signal:null}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,s){let i=this._hashToCIM.get(t);if(i)return Promise.resolve(i);const r=ee(e);if(null!=r){if("CIMSymbolReference"===r.type)return i=r,this._hashToCIM.set(t,i),Promise.resolve(i);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=r.fetchCIMSymbol(s).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),f$6(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,s,i){const r=this._hashToExpandedSymbol.get(s);if(r)return Promise.resolve(r);let o=this._hashToExpandedSymbolPromise.get(s);if(o)return o;const a=this.container.stage,n=this._getArcadeInfo(t),h=T(null),l=o$7(e,h);return o=r$5(l,n,a.resourceManager,i),this._hashToExpandedSymbolPromise.set(s,o),o.then((e=>(this._hashToExpandedSymbol.set(s,e),this._hashToExpandedSymbolPromise.delete(s),e))),o}async _getSymbolResources(e,t){s$4(this._controller.signal);return this.container.stage?this._getSymbolForGraphic(e,t).then((s=>{if(!s)return null;const r=s.hash();return this._getCIMSymbol(s,r,t).then((s=>null==s?null:this._expandCIMSymbol(s,e,r,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const s=new Array(t.length);for(let e=0;e<t.length;e++){const r=t[e],o=[],[a]=i$3(r.text);r.text=a;for(let e=0;e<a.length;e++)o.push(a.charCodeAt(e));s[e]={symbol:r,id:e,glyphIds:o};}const o=new Map;return this.container.getMaterialItems(s).then((s=>{r$6(s);for(let e=0;e<t.length;e++){const i=t[e];o.set(i.cim,{text:i.text,mosaicItem:s[e].mosaicItem});}return {symbol:e,textInfo:o,hash:r}}))}return {symbol:e,hash:r}}))))})).catch((e=>(f$6(e),null))):null}async _projectAndNormalizeGeometry(e,t){if(s$4(this._controller.signal),null==e.geometry||"mesh"===e.geometry.type)return null;let s=e.geometry;if(f$3(s)){const e=s.rings;s.rings=e;}else if(s$6(s)){const e=s.paths;s.paths=e;}else if(m$3(s)){const i=await this._getSymbolForGraphic(e,t);if(s$4(this._controller.signal),i&&(p$3(i.type)||u$3(i.type))){s=s.center;}else s=x$3(s);}await f$7(s.spatialReference,this.view.spatialReference);const i=a$4(s),r=g$3(i,s.spatialReference,this.view.spatialReference);return r&&p$4(r),r}_onTileUpdate(e){const t=d$3(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const s of e.removed)this._removeTile(s.key);}async _addGraphic(e){this._abortProcessingGraphic(e.uid),s$4(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};try{await this._addOrUpdateGraphic(e,s),s$4(this._controller.signal),this._graphicIdToAbortController.delete(e.uid);}catch(i){if(this._graphicIdToAbortController.delete(e.uid),!d$5(i))throw i}}_updateGraphic(e,t){s$4(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([s,i]).then((([t,s])=>{s$4(this._controller.signal),this._graphicStore.addOrModify(e,s,t);}))}_addOrUpdateGraphic(e,t){s$4(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([s,i]).then((([t,s])=>{s$4(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,s,t);}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds(i$1(),e),s=this.view.featuresTilingScheme.getTileResolution(e.level),i=new a(e,s,t[0],t[3]);return this._tiles.set(e,i),this.container.addChild(i),i}async _addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(0===i.length)return;if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&(l$2(e.geometry)||u$4(e.geometry))&&this._wrapPoints(e,s);}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,i),remove:[],end:!0,sort:!1};s.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating");}catch(o){if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!d$5(o))throw o}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e);}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?X:0));}_getGraphicsData(e,t,s){const i=this.view,r=d$3(i.spatialReference),o=this._graphicStore.getGraphicsData(e,t,s);if(r){const e=Math.round((r.valid[1]-r.valid[0])/t.resolution);for(const t of o)t.geometry&&(l$2(t.geometry)||u$4(t.geometry))&&this._wrapPoints(t,e);}return o}_wrapPoints(e,t){const s=e.geometry;u$4(s)?this._wrapMultipoint(s,t):this._wrapPoint(e,t);}_wrapMultipoint(e,t){const s=e.points,i=[];let r=0,o=0;for(const[a,n]of s){if(i.push([a+r,n]),r=0,t===c$1){const e=5*f$4;a+o<e?(i.push([t,0]),r=-t):a+o>c$1-e&&(i.push([-t,0]),r=t);}else a+o<-f$4?(i.push([t,0]),r=-t):a+o>c$1+f$4&&(i.push([-t,0]),r=t);o+=a;}e.points=i;}_wrapPoint(e,t){const s=e.geometry;if(t===c$1){const i=5*f$4;s.x<i?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>c$1-i&&(e.geometry={points:[[s.x,s.y],[-t,0]]});}else s.x<-f$4?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>c$1+f$4&&(e.geometry={points:[[s.x,s.y],[-t,0]]});}_processGraphics(e,t,s){if(!(t&&t.length)||!this._meshFactory)return Promise.resolve(null);const i=o.from(t,this.uid,e.transform),r=this._meshFactory;return this._matcher.then((t=>r.analyzeGraphics(i,this.container.stage.resourceManager,t,null,null,s).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,i))))))}_processAnalyzedGraphics(e,t){const s=this._meshFactory,i=t.getSize(),r=t.getCursor(),o={features:i,records:i,metrics:0},a=new E(e.key.id,o,S.DEFAULT,!1,!1),n=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const i=new e$1(t.displayId);i.insertAfter=t.insertAfter,n.push(i),s.writeGraphic(a,r,e.level,this.container.stage.resourceManager);}const h=e.tileInfoView.tileInfo.isWrappable,l=a.serialize(h);if(1!==l.length)return new B;const d=l[0].message;return B.fromVertexData(d,n)}_abortProcessingGraphic(e){this._graphicIdToAbortController.get(e)?.abort();}_getNullSymbol(e){const t=e.geometry;return s$6(t)?O:f$3(t)||m$3(t)?y$3:this.defaultPointSymbolEnabled?N:null}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating");}),160),this.notifyChange("updating");}};e$7([y$4()],re.prototype,"_effectiveRenderer",null),e$7([y$4({constructOnly:!0})],re.prototype,"requestUpdateCallback",void 0),e$7([y$4()],re.prototype,"container",void 0),e$7([y$4({constructOnly:!0})],re.prototype,"graphics",void 0),e$7([y$4()],re.prototype,"renderer",void 0),e$7([y$4()],re.prototype,"updating",null),e$7([y$4()],re.prototype,"view",void 0),e$7([y$4()],re.prototype,"updateRequested",void 0),e$7([y$4()],re.prototype,"defaultPointSymbolEnabled",void 0),re=e$7([a$5("esri.views.2d.layers.support.GraphicsView2D")],re);const oe=re;

export { oe as o };

//# sourceMappingURL=GraphicsView2D-77f1b58e.js.map