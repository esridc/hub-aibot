import { bT as n, C, k as h, c5 as r, M, aZ as t, w as h$1, e$ as b$1, bL as i$1, Q as m, m as e, n as n$1 } from './hub-compass-map-f4225e12.js';
import { a as i } from './Container-a2c22c83.js';
import { P, G, D } from './enums-f1bebe6f.js';
import { b as e$1, T as T$1 } from './Texture-52798ec4.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class l{constructor(l,e,t){this.pixelBlock=l,this.extent=e,this.originalPixelBlock=t;}get width(){return null!=this.pixelBlock?this.pixelBlock.width:0}get height(){return null!=this.pixelBlock?this.pixelBlock.height:0}render(l){const e=this.pixelBlock;if(null==e)return;const t=this.filter({extent:this.extent,pixelBlock:this.originalPixelBlock??e});if(null==t.pixelBlock)return;t.pixelBlock.maskIsAlpha&&(t.pixelBlock.premultiplyAlpha=!0);const i=t.pixelBlock.getAsRGBA(),h=l.createImageData(t.pixelBlock.width,t.pixelBlock.height);h.data.set(i),l.putImageData(h,0,0);}getRenderedRasterPixels(){const l=this.filter({extent:this.extent,pixelBlock:this.pixelBlock});return null==l.pixelBlock?null:(l.pixelBlock.maskIsAlpha&&(l.pixelBlock.premultiplyAlpha=!0),{width:l.pixelBlock.width,height:l.pixelBlock.height,renderedRasterPixels:new Uint8Array(l.pixelBlock.getAsRGBA().buffer)})}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function w(t){return t&&"render"in t}function b(t){const e=document.createElement("canvas");return e.width=t.width,e.height=t.height,t.render(e.getContext("2d")),e}function v(e){return w(e)?e instanceof l?n(e.getRenderedRasterPixels(),(t=>t.renderedRasterPixels)):b(e):e}class T extends i{constructor(t=null,e=!1){super(),this.blendFunction="standard",this._sourceWidth=0,this._sourceHeight=0,this._textureInvalidated=!1,this._texture=null,this.stencilRef=0,this.coordScale=[1,1],this._height=void 0,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._width=void 0,this.x=0,this.y=0,this.immutable=e,this.source=t,this.requestRender=this.requestRender.bind(this);}destroy(){this._texture&&(this._texture.dispose(),this._texture=null),null!=this._uploadStatus&&(this._uploadStatus.controller.abort(),this._uploadStatus=null);}get isSourceScaled(){return this.width!==this._sourceWidth||this.height!==this._sourceHeight}get height(){return void 0!==this._height?this._height:this._sourceHeight}set height(t){this._height=t;}get source(){return this._source}set source(t){null==t&&null==this._source||(this._source=t,this.invalidateTexture(),this.requestRender());}get width(){return void 0!==this._width?this._width:this._sourceWidth}set width(t){this._width=t;}beforeRender(t){super.beforeRender(t),this.updateTexture(t);}async setSourceAsync(t,i){null!=this._uploadStatus&&this._uploadStatus.controller.abort();const r=new AbortController,h$1=C();return h(i,(()=>r.abort())),h(r,(t=>h$1.reject(t))),this._uploadStatus={controller:r,resolver:h$1},this.source=t,h$1.promise}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this._source instanceof HTMLImageElement?(this._sourceHeight=this._source.naturalHeight,this._sourceWidth=this._source.naturalWidth):this._source&&(this._sourceHeight=this._source.height,this._sourceWidth=this._source.width));}updateTransitionProperties(t,e){t>=64&&(this.fadeTransitionEnabled=!1,this.inFadeTransition=!1),super.updateTransitionProperties(t,e);}setTransform(t$1){const e=r(this.transforms.dvs),[s,i]=t$1.toScreenNoRotation([0,0],[this.x,this.y]),n=this.resolution/this.pixelRatio/t$1.resolution,l=n*this.width,c=n*this.height,_=Math.PI*this.rotation/180;M(e,e,t(s,i)),M(e,e,t(l/2,c/2)),h$1(e,e,-_),M(e,e,t(-l/2,-c/2)),b$1(e,e,t(l,c)),i$1(this.transforms.dvs,t$1.displayViewMat3,e);}setSamplingProfile(t){this._texture&&(t.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(t.samplingMode));}bind(t,e){this._texture&&t.bindTexture(this._texture,e);}async updateTexture({context:t,painter:e}){if(!this._textureInvalidated)return;if(this._textureInvalidated=!1,this._texture||(this._texture=this._createTexture(t)),!this.source)return void this._texture.setData(null);this._texture.resize(this._sourceWidth,this._sourceHeight);const s=v(this.source);try{if(null!=this._uploadStatus){const{controller:t,resolver:i}=this._uploadStatus,r={signal:t.signal},{width:h,height:o}=this,u=this._texture,a=e.textureUploadManager;await a.enqueueTextureUpdate({data:s,texture:u,width:h,height:o},r),i.resolve(),this._uploadStatus=null;}else this._texture.setData(s);this.ready();}catch(r){m(r);}}onDetach(){this.destroy();}_createTransforms(){return {dvs:e()}}_createTexture(t){const e=this.immutable&&t.type===n$1.WEBGL2,s=new e$1;return s.internalFormat=e?P.RGBA8:G.RGBA,s.wrapMode=D.CLAMP_TO_EDGE,s.isImmutable=e,s.width=this._sourceWidth,s.height=this._sourceHeight,new T$1(t,s)}}

export { T, b, l, w };

//# sourceMappingURL=Bitmap-5b32a246.js.map