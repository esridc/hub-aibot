{"version":3,"names":["candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","ownerDocument","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","call","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","content","children","nestedCandidates","flatten","push","scopeParent","validCandidate","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","getTabindex","node","isScope","tabIndex","test","isContentEditable","isNaN","parseInt","getAttribute","sortOrderedTabbables","a","b","documentOrder","isInput","isHiddenInput","type","isDetailsWithSummary","r","some","child","getCheckedRadio","nodes","form","i","checked","isTabbableRadio","name","radioScope","queryRadios","radioSet","window","CSS","escape","err","console","error","message","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRootHost","nodeRootHost","host","attached","contains","_nodeRootHost2","isZeroArea","_node$getBoundingClie","getBoundingClientRect","width","height","isHidden","_ref","displayCheck","getComputedStyle","visibility","isDirectSummary","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","getClientRects","isDisabledFromFieldset","parentNode","disabled","item","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","candidateTabindex","sort","reduce","acc","sortable","concat","tabbable","bind","focusable","isTabbable","Error","focusableCandidateSelector","isFocusable","tabbableOptions","ensureId","id","toLowerCase","guid","nodeListToArray","nodeList","isArray","getModeName","closestElWithMode","closestElementCrossShadowBoundary","CSS_UTILITY","darkMode","lightMode","classList","getElementDir","prop","selector","closest","getElementProp","fallbackValue","getHost","root","queryElementRoots","queryFrom","found","getElementById","querySelector","closestFrom","walkUpAncestry","onVisit","visit","result","undefined","ShadowRoot","containsCrossShadowBoundary","maybeDescendant","isCalciteFocusable","setFocus","async","focusElement","focus","focusFirstTabbable","defaultSlotSelector","getSlotted","slotName","slotSelector","map","all","queryMultiple","querySingle","getDirectChildren","direct","previousValue","currentValue","match","filterDirectChildren","setRequestedIcon","iconObject","iconValue","matchedValue","intersects","rect1","rect2","left","right","top","bottom","toAriaBoolean","value","Boolean","toString","slotChangeHasAssignedElement","event","slotChangeGetAssignedElements","target","isPrimaryPointerButton","isPrimary","button","focusElementInGroup","currentElement","destination","currentIndex","indexOf","isFirstItem","isLastItem","focusTarget"],"sources":["./node_modules/tabbable/dist/index.esm.js","./node_modules/@esri/calcite-components/dist/collection/utils/dom.js"],"sourcesContent":["/*!\n* tabbable 6.0.1\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]:not(slot)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])', 'details>summary:first-of-type', 'details'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  return element.getRootNode();\n} : function (element) {\n  return element.ownerDocument;\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n      var validShadowRoot = !options.shadowRootFilter || options.shadowRootFilter(element);\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\nvar getTabindex = function getTabindex(node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if ((isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || node.isContentEditable) && isNaN(parseInt(node.getAttribute('tabindex'), 10))) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRootHost;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  var nodeRootHost = getRootNode(node).host;\n  var attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && _nodeRootHost.ownerDocument.contains(nodeRootHost) || node.ownerDocument.contains(node));\n  while (!attached && nodeRootHost) {\n    var _nodeRootHost2;\n    // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n    //  which means we need to get the host's host and check if that parent host is contained\n    //  in (i.e. attached to) the document\n    nodeRootHost = getRootNode(nodeRootHost).host;\n    attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && _nodeRootHost2.ownerDocument.contains(nodeRootHost));\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getTabindex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.8-next.4\n */\nimport { tabbable } from \"tabbable\";\nimport { guid } from \"./guid\";\nimport { CSS_UTILITY } from \"./resources\";\nexport const tabbableOptions = {\n  getShadowRoot: true\n};\n/**\n * This helper will guarantee an ID on the provided element.\n *\n * If it already has an ID, it will be preserved, otherwise a unique one will be generated and assigned.\n *\n * @param el\n * @returns {string} The element's ID.\n */\nexport function ensureId(el) {\n  if (!el) {\n    return \"\";\n  }\n  return (el.id = el.id || `${el.tagName.toLowerCase()}-${guid()}`);\n}\nexport function nodeListToArray(nodeList) {\n  return Array.isArray(nodeList) ? nodeList : Array.from(nodeList);\n}\nexport function getModeName(el) {\n  const closestElWithMode = closestElementCrossShadowBoundary(el, `.${CSS_UTILITY.darkMode}, .${CSS_UTILITY.lightMode}`);\n  return closestElWithMode?.classList.contains(\"calcite-mode-dark\") ? \"dark\" : \"light\";\n}\nexport function getElementDir(el) {\n  const prop = \"dir\";\n  const selector = `[${prop}]`;\n  const closest = closestElementCrossShadowBoundary(el, selector);\n  return closest ? closest.getAttribute(prop) : \"ltr\";\n}\nexport function getElementProp(el, prop, fallbackValue) {\n  const selector = `[${prop}]`;\n  const closest = el.closest(selector);\n  return closest ? closest.getAttribute(prop) : fallbackValue;\n}\nexport function getRootNode(el) {\n  return el.getRootNode();\n}\nexport function getHost(root) {\n  return root.host || null;\n}\n/**\n * This helper queries an element's rootNode and any ancestor rootNodes.\n *\n * If both an 'id' and 'selector' are supplied, 'id' will take precedence over 'selector'.\n *\n * @param element\n * @param root0\n * @param root0.selector\n * @param root0.id\n * @returns {Element} The element.\n */\nexport function queryElementRoots(element, { selector, id }) {\n  // Gets the rootNode and any ancestor rootNodes (shadowRoot or document) of an element and queries them for a selector.\n  // Based on: https://stackoverflow.com/q/54520554/194216\n  function queryFrom(el) {\n    if (!el) {\n      return null;\n    }\n    if (el.assignedSlot) {\n      el = el.assignedSlot;\n    }\n    const rootNode = getRootNode(el);\n    const found = id\n      ? \"getElementById\" in rootNode\n        ? /*\n          Check to make sure 'getElementById' exists in cases where element is no longer connected to the DOM and getRootNode() returns the element.\n          https://github.com/Esri/calcite-components/pull/4280\n           */\n          rootNode.getElementById(id)\n        : null\n      : selector\n        ? rootNode.querySelector(selector)\n        : null;\n    const host = getHost(rootNode);\n    return found ? found : host ? queryFrom(host) : null;\n  }\n  return queryFrom(element);\n}\nexport function closestElementCrossShadowBoundary(element, selector) {\n  // based on https://stackoverflow.com/q/54520554/194216\n  function closestFrom(el) {\n    return el ? el.closest(selector) || closestFrom(getHost(getRootNode(el))) : null;\n  }\n  return closestFrom(element);\n}\n/**\n * This utility helps invoke a callback as it traverses a node and its ancestors until reaching the root document.\n *\n * Returning early or undefined in `onVisit` will continue traversing up the DOM tree. Otherwise, traversal will halt with the returned value as the result of the function\n *\n * @param element\n * @param onVisit\n */\nexport function walkUpAncestry(element, onVisit) {\n  return visit(element, onVisit);\n}\nfunction visit(node, onVisit) {\n  if (!node) {\n    return;\n  }\n  const result = onVisit(node);\n  if (result !== undefined) {\n    return result;\n  }\n  const { parentNode } = node;\n  return visit(parentNode instanceof ShadowRoot ? parentNode.host : parentNode, onVisit);\n}\nexport function containsCrossShadowBoundary(element, maybeDescendant) {\n  return !!walkUpAncestry(maybeDescendant, (node) => (node === element ? true : undefined));\n}\nexport function isCalciteFocusable(el) {\n  return typeof el?.setFocus === \"function\";\n}\nexport async function focusElement(el) {\n  if (!el) {\n    return;\n  }\n  return isCalciteFocusable(el) ? el.setFocus() : el.focus();\n}\n/**\n * Helper to focus the first tabbable element.\n *\n * @param {HTMLElement} element The html element containing tabbable elements.\n */\nexport function focusFirstTabbable(element) {\n  (tabbable(element, tabbableOptions)[0] || element).focus();\n}\nconst defaultSlotSelector = \":not([slot])\";\nexport function getSlotted(element, slotName, options) {\n  if (slotName && !Array.isArray(slotName) && typeof slotName !== \"string\") {\n    options = slotName;\n    slotName = null;\n  }\n  const slotSelector = slotName\n    ? Array.isArray(slotName)\n      ? slotName.map((name) => `[slot=\"${name}\"]`).join(\",\")\n      : `[slot=\"${slotName}\"]`\n    : defaultSlotSelector;\n  if (options?.all) {\n    return queryMultiple(element, slotSelector, options);\n  }\n  return querySingle(element, slotSelector, options);\n}\nfunction getDirectChildren(el, selector) {\n  return el ? Array.from(el.children || []).filter((child) => child?.matches(selector)) : [];\n}\nfunction queryMultiple(element, slotSelector, options) {\n  let matches = slotSelector === defaultSlotSelector\n    ? getDirectChildren(element, defaultSlotSelector)\n    : Array.from(element.querySelectorAll(slotSelector));\n  matches = options && options.direct === false ? matches : matches.filter((el) => el.parentElement === element);\n  matches = options?.matches ? matches.filter((el) => el?.matches(options.matches)) : matches;\n  const selector = options?.selector;\n  return selector\n    ? matches\n      .map((item) => Array.from(item.querySelectorAll(selector)))\n      .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], [])\n      .filter((match) => !!match)\n    : matches;\n}\nfunction querySingle(element, slotSelector, options) {\n  let match = slotSelector === defaultSlotSelector\n    ? getDirectChildren(element, defaultSlotSelector)[0] || null\n    : element.querySelector(slotSelector);\n  match = options && options.direct === false ? match : match?.parentElement === element ? match : null;\n  match = options?.matches ? (match?.matches(options.matches) ? match : null) : match;\n  const selector = options?.selector;\n  return selector ? match?.querySelector(selector) : match;\n}\nexport function filterDirectChildren(el, selector) {\n  return Array.from(el.children).filter((child) => child.matches(selector));\n}\n// set a default icon from a defined set or allow an override with an icon name string\nexport function setRequestedIcon(iconObject, iconValue, matchedValue) {\n  if (typeof iconValue === \"string\" && iconValue !== \"\") {\n    return iconValue;\n  }\n  else if (iconValue === \"\") {\n    return iconObject[matchedValue];\n  }\n}\nexport function intersects(rect1, rect2) {\n  return !(rect2.left > rect1.right ||\n    rect2.right < rect1.left ||\n    rect2.top > rect1.bottom ||\n    rect2.bottom < rect1.top);\n}\n/**\n * This helper makes sure that boolean aria attributes are properly converted to a string.\n *\n * It should only be used for aria attributes that require a string value of \"true\" or \"false\".\n *\n * @param value\n * @returns {string} The string conversion of a boolean value (\"true\" | \"false\").\n */\nexport function toAriaBoolean(value) {\n  return Boolean(value).toString();\n}\n/**\n * This helper returns `true` if the target `slot` element from the `onSlotchange` event has an assigned element.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n *\n * @param event\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nexport function slotChangeHasAssignedElement(event) {\n  return !!slotChangeGetAssignedElements(event).length;\n}\n/**\n * This helper returns the assigned elements on a `slot` element from the `onSlotchange` event.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotElements = slotChangeGetAssignedElements(event)} />}\n * ```\n *\n * @param event\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nexport function slotChangeGetAssignedElements(event) {\n  return event.target.assignedElements({\n    flatten: true\n  });\n}\n/**\n * This helper returns true if the pointer event fired from the primary button of the device.\n *\n * See https://www.w3.org/TR/pointerevents/#the-button-property.\n *\n * @param event\n * @returns {boolean}\n */\nexport function isPrimaryPointerButton(event) {\n  return !!(event.isPrimary && event.button === 0);\n}\nexport const focusElementInGroup = (elements, currentElement, destination) => {\n  const currentIndex = elements.indexOf(currentElement);\n  const isFirstItem = currentIndex === 0;\n  const isLastItem = currentIndex === elements.length - 1;\n  destination =\n    destination === \"previous\" && isFirstItem ? \"last\" : destination === \"next\" && isLastItem ? \"first\" : destination;\n  let focusTarget;\n  switch (destination) {\n    case \"first\":\n      focusTarget = elements[0];\n      break;\n    case \"last\":\n      focusTarget = elements[elements.length - 1];\n      break;\n    case \"next\":\n      focusTarget = elements[currentIndex + 1] || elements[0];\n      break;\n    case \"previous\":\n      focusTarget = elements[currentIndex - 1] || elements[elements.length - 1];\n      break;\n  }\n  focusElement(focusTarget);\n  return focusTarget;\n};\n"],"mappings":"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"}